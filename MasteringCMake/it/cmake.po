# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Ken Martin, Bill Hoffman (Traduzione: Baldassarre
# Cesarano)
# This file is distributed under the same license as the Mastering CMake
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
msgid ""
msgstr "Project-Id-Version: Mastering CMake 1.0.0 (trad. Ita)\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-07-14 10:32+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: it\n"
"Language-Team: it <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.14.0"

#: ../../source/cmake/Help/guide/ide-integration/index.rst:2
msgid "IDE Integration Guide"
msgstr "Guida all'integrazione dell'IDE"

#: ../../source/cmake/Help/guide/ide-integration/index.rst:5
#: ../../source/cmake/Help/guide/importing-exporting/index.rst:5
#: ../../source/cmake/Help/guide/tutorial/index.rst:5
#: ../../source/cmake/Help/guide/user-interaction/index.rst:5
#: ../../source/cmake/Help/guide/using-dependencies/index.rst:5
msgid "Contents"
msgstr "Contenuti"

#: ../../source/cmake/Help/guide/ide-integration/index.rst:9
#: ../../source/cmake/Help/guide/importing-exporting/index.rst:9
#: ../../source/cmake/Help/guide/tutorial/index.rst:9
#: ../../source/cmake/Help/guide/user-interaction/index.rst:9
#: ../../source/cmake/Help/guide/using-dependencies/index.rst:9
msgid "Introduction"
msgstr "Introduzione"

#: ../../source/cmake/Help/guide/ide-integration/index.rst:11
msgid ""
"Integrated development environments (IDEs) may want to integrate with "
"CMake to improve the development experience for CMake users. This "
"document lays out the recommended best practices for such integration."
msgstr "Gli ambienti di sviluppo integrati (IDE) potrebbero volersi integrare con CMake per migliorare l'esperienza di sviluppo per gli utenti di CMake. Questo documento illustra le \"best practices\" consigliate per tale integrazione."

#: ../../source/cmake/Help/guide/ide-integration/index.rst:16
msgid "Bundling"
msgstr "Bundling (Raggruppamento)"

#: ../../source/cmake/Help/guide/ide-integration/index.rst:18
msgid ""
"Many IDE vendors will want to bundle a copy of CMake with their IDE. IDEs"
" that bundle CMake should present the user with the option of using an "
"external CMake installation instead of the bundled one, in case the "
"bundled copy becomes outdated and the user wants to use a newer version."
msgstr "Molti fornitori di IDE vorranno eseguire il bundle di una copia di CMake con il proprio IDE. Gli IDE che raggruppano CMake dovrebbero offrire all'utente la possibilità di utilizzare un'installazione CMake esterna anziché quella in bundle, nel caso in cui tale copia diventi obsoleta e l'utente desideri utilizzare una versione più recente."

#: ../../source/cmake/Help/guide/ide-integration/index.rst:23
msgid ""
"While IDE vendors may be tempted to bundle different versions of CMake "
"with their application, such practice is not recommended. CMake has "
"strong guarantees of backwards compatibility, and there is no reason not "
"to use a newer version of CMake than what a project requires, or indeed, "
"the very latest version. Therefore, it is recommended that IDE vendors "
"that bundle CMake with their application always include the very latest "
"patch version of CMake available at the time of release."
msgstr "Sebbene i fornitori IDE possano essere tentati di raggruppare diverse versioni di CMake con la loro applicazione, tale pratica non è consigliata. CMake offre forti garanzie di compatibilità con le versioni precedenti e non c'è motivo di non utilizzare una versione di CMake più recente di quella richiesta da un progetto, o addirittura la versione più recente. Pertanto, è consigliabile che i fornitori IDE che eseguono il blundle (raggruppamento) di CMake con la propria applicazione includano sempre la versione patch più recente di CMake disponibile al momento del rilascio."

#: ../../source/cmake/Help/guide/ide-integration/index.rst:31
msgid ""
"As a suggestion, IDEs may also ship a copy of the Ninja buildsystem "
"alongside CMake. Ninja is highly performant and well-supported on all "
"platforms that support CMake. IDEs that bundle Ninja should use Ninja "
"1.10 or later, which contains features needed to support Fortran builds."
msgstr "Come suggerimento, gli IDE potrebbero anche fornire una copia del sistema di build Ninja insieme a CMake. Ninja è altamente performante e ben supportato su tutte le piattaforme che supportano CMake. Gli IDE che raggruppano Ninja dovrebbero utilizzare Ninja 1.10 o versione successiva, che contiene le funzionalità necessarie per supportare le build Fortran."

#: ../../source/cmake/Help/guide/ide-integration/index.rst:37
#: ../../source/cmake/Help/guide/user-interaction/index.rst:415
msgid "Presets"
msgstr "Preimpostazioni"

#: ../../source/cmake/Help/guide/ide-integration/index.rst:39
msgid ""
"CMake supports a file format called ``CMakePresets.json``, and its user-"
"specific counterpart, ``CMakeUserPresets.json``. This file contains "
"information on the various configure presets that a user may want. Each "
"preset may have a different compiler, build flags, etc. The details of "
"this format are explained in the :manual:`cmake(1)` manual."
msgstr "CMake supporta un formato di file chiamato ``CMakePresets.json`` e la sua controparte specifica dell'utente, ``CMakeUserPresets.json``. Questo file contiene informazioni sulle varie preimpostazioni della configurazione che un utente potrebbe desiderare. Ogni preimpostazione può avere un compilatore diverso, build flag, ecc. I dettagli di questo formato sono spiegati nel manuale :manual:`cmake(1)`."

#: ../../source/cmake/Help/guide/ide-integration/index.rst:45
msgid ""
"IDE vendors are encouraged to read and evaluate this file the same way "
"CMake does, and present the user with the presets listed in the file. "
"Users should be able to see (and possibly edit) the CMake cache "
"variables, environment variables, and command line options that are "
"defined for a given preset. The IDE should then construct the list of "
"appropriate :manual:`cmake(1)` command line arguments based on these "
"settings, rather than using the ``--preset=`` option directly. The "
"``--preset=`` option is intended only as a convenient frontend for "
"command line users, and should not be used by the IDE."
msgstr "I fornitori di IDE sono incoraggiati a leggere e valutare questo file allo stesso modo di CMake e a presentare all'utente le preimpostazioni elencate nel file. Gli utenti dovrebbero essere in grado di visualizzare (ed eventualmente modificare) le variabili della cache CMake, le variabili di ambiente e le opzioni della riga di comando definite per una determinata preimpostazione. L'IDE dovrebbe poi costruire l'elenco degli argomenti della riga di comando :manual:`cmake(1)` appropriati in base a queste impostazioni, anziché utilizzare direttamente l'opzione ``--preset=``. L'opzione ``--preset=`` è intesa solo come un comodo frontend per gli utenti della riga di comando e non dovrebbe essere utilizzata dall'IDE."

#: ../../source/cmake/Help/guide/ide-integration/index.rst:54
msgid ""
"For example, if a preset named ``ninja`` specifies ``Ninja`` as the "
"generator and ``${sourceDir}/build`` as the build directory, instead of "
"running:"
msgstr "Ad esempio, se un preset denominato ``ninja`` specifica ``Ninja`` come generatore e ``${sourceDir}/build`` come directory di build, invece di eseguire:"

#: ../../source/cmake/Help/guide/ide-integration/index.rst:61
msgid ""
"the IDE should instead calculate the settings of the ``ninja`` preset, "
"and then run:"
msgstr "l'IDE dovrebbe invece calcolare le impostazioni del preset ``ninja``, e poi eseguire:"

#: ../../source/cmake/Help/guide/ide-integration/index.rst:68
msgid ""
"While reading, parsing, and evaluating the contents of "
"``CMakePresets.json`` is straightforward, it is not trivial. In addition "
"to the documentation, IDE vendors may also wish to refer to the CMake "
"source code and test cases for a better understanding of how to implement"
" the format. :download:`This file <../../manual/presets/schema.json>` "
"provides a machine-readable JSON schema for the ``CMakePresets.json`` "
"format that IDE vendors may find useful for validation and providing "
"editing assistance."
msgstr "Sebbene leggere, analizzare e valutare il contenuto di ``CMakePresets.json`` sia semplice, non è banale. Oltre alla documentazione, i fornitori IDE potrebbero anche voler fare riferimento al codice sorgente CMake e ai casi di test per una migliore comprensione di come implementare il formato. :download:`Questo file <../../manual/presets/schema.json>` fornisce uno schema JSON leggibile dalla macchina per il formato ``CMakePresets.json`` che i fornitori IDE potrebbero trovare utile per la convalida e fornire assistenza per la modifica."

#: ../../source/cmake/Help/guide/ide-integration/index.rst:77
msgid "Configuring"
msgstr "Configurazione"

#: ../../source/cmake/Help/guide/ide-integration/index.rst:79
msgid ""
"IDEs that invoke :manual:`cmake(1)` to run the configure step may wish to"
" receive information about the artifacts that the build will produce, as "
"well as the include directories, compile definitions, etc. used to build "
"the artifacts. Such information can be obtained by using the "
":manual:`File API <cmake-file-api(7)>`. The manual page for the File API "
"contains more information about the API and how to invoke it. "
":manual:`Server mode <cmake-server(7)>` was removed as of CMake 3.20 and "
"should not be used on CMake 3.14 or later."
msgstr "Gli IDE che invocano :manual:`cmake(1)` per eseguire il passaggio di configurazione potrebbero voler ricevere informazioni sugli artefatti che la build produrrà, nonché sulle directory di inclusione, sulle definizioni della compilazione, ecc. utilizzate per creare gli artefatti. Tali informazioni possono essere ottenute utilizzando :manual:`File API <cmake-file-api(7)>`. La pagina del manuale per l'API File contiene ulteriori informazioni sull'API e su come richiamarla. :manual:`La modalità server <cmake-server(7)>` è stata rimossa a partire da CMake 3.20 e non deve essere utilizzata su CMake 3.14 o versioni successive."

#: ../../source/cmake/Help/guide/ide-integration/index.rst:88
msgid ""
"IDEs should avoid creating more build trees than necessary, and only "
"create multiple build trees if the user wishes to switch to a different "
"compiler, use different compile flags, etc. In particular, IDEs should "
"NOT create multiple single-config build trees which all have the same "
"properties except for a differing :variable:`CMAKE_BUILD_TYPE`, "
"effectively creating a multi-config environment. Instead, the "
":generator:`Ninja Multi-Config` generator, in conjunction with the "
":manual:`File API <cmake-file-api(7)>` to get the list of build "
"configurations, should be used for this purpose."
msgstr "Gli IDE devono evitare di creare più alberi di compilazione del necessario e crearne di più solo se l'utente desidera passare a un compilatore diverso, usare flag di compilazione diversi, ecc. In particolare, gli IDE NON dovrebbero creare più alberi di build a configurazione singola che abbiano tutti le stesse proprietà ad eccezione di una :variable:`CMAKE_BUILD_TYPE` diversa, creando di fatto un ambiente multi-config. Al contrario, per ottenere l'elenco delle configurazioni di build si deve usare il generatore :generator:`Ninja Multi-Config`, insieme al :manual:`File API <cmake-file-api(7)>`."

#: ../../source/cmake/Help/guide/ide-integration/index.rst:97
msgid ""
"IDEs should not use the \"extra generators\" with Makefile or Ninja "
"generators, which generate IDE project files in addition to the Makefile "
"or Ninja files. Instead the :manual:`File API <cmake-file-api(7)>` should"
" be used to get the list of build artifacts."
msgstr "Gli IDE non dovrebbero utilizzare i \"generatori extra\" con i generatori Makefile o Ninja, che generano file di progetto IDE oltre ai file Makefile o Ninja. Si dovrebbe invece usare :manual:`File API <cmake-file-api(7)>` per ottenere l'elenco degli artefatti della compilazione."

#: ../../source/cmake/Help/guide/ide-integration/index.rst:103
msgid "Building"
msgstr "Building"

#: ../../source/cmake/Help/guide/ide-integration/index.rst:105
msgid ""
"If a Makefile or Ninja generator is used to generate the build tree, it "
"is not recommended to invoke ``make`` or ``ninja`` directly. Instead, it "
"is recommended that the IDE invoke :manual:`cmake(1)` with the "
"``--build`` argument, which will in turn invoke the appropriate build "
"tool."
msgstr "Se per generare l'albero di compilazione viene utilizzato un generatore Makefile o Ninja, non è consigliabile invocare direttamente ``make`` o ``ninja``. Si consiglia invece che l'IDE invochi :manual:`cmake(1)` con l'argomento ``--build``, che a sua volta invocherà lo strumento di compilazione appropriato."

#: ../../source/cmake/Help/guide/ide-integration/index.rst:110
msgid ""
"If an IDE project generator is used, such as :generator:`Xcode` or one of"
" the Visual Studio generators, and the IDE understands the project format"
" used, the IDE should read the project file and build it the same way it "
"would otherwise."
msgstr "Se viene utilizzato un generatore di progetti IDE, come :generator:`Xcode` o uno dei generatori di Visual Studio, e l'IDE comprende il formato di progetto utilizzato, l'IDE dovrebbe leggere il file di progetto e compilarlo nello stesso modo in cui lo farebbe il generatore."

#: ../../source/cmake/Help/guide/ide-integration/index.rst:114
msgid ""
"The :manual:`File API <cmake-file-api(7)>` can be used to obtain a list "
"of build configurations from the build tree, and the IDE should present "
"this list to the user to select a build configuration."
msgstr "Il :manual:`File API <cmake-file-api(7)>` può essere utilizzato per ottenere un elenco di configurazioni di build dall'albero di build e l'IDE dovrebbe presentare questo elenco all'utente per selezionare una configurazione di build."

#: ../../source/cmake/Help/guide/ide-integration/index.rst:119
msgid "Testing"
msgstr "Test"

#: ../../source/cmake/Help/guide/ide-integration/index.rst:121
msgid ""
":manual:`ctest(1)` supports outputting a JSON format with information "
"about the available tests and test configurations. IDEs which want to run"
" CTest should obtain this information and use it to present the user with"
" a list of tests."
msgstr ":manual:`ctest(1)` supporta l'output in formato JSON con informazioni sui test disponibili e sulle configurazioni dei test. Gli IDE che desiderano eseguire CTest dovrebbero ottenere queste informazioni e utilizzarle per presentare all'utente un elenco di test."

#: ../../source/cmake/Help/guide/ide-integration/index.rst:125
msgid ""
"IDEs should not invoke the ``test`` target of the generated buildsystem. "
"Instead, they should invoke :manual:`ctest(1)` directly."
msgstr "Gli IDE non dovrebbero invocare il target ``test`` del buildsystem generato. Dovrebbero invece invocare direttamente :manual:`ctest(1)`."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:2
msgid "Importing and Exporting Guide"
msgstr "Guida all'Importazione e all'Esportazione"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:11
msgid ""
"In this guide, we will present the concept of :prop_tgt:`IMPORTED` "
"targets and demonstrate how to import existing executable or library "
"files from disk into a CMake project. We will then show how CMake "
"supports exporting targets from one CMake-based project and importing "
"them into another. Finally, we will demonstrate how to package a project "
"with a configuration file to allow for easy integration into other CMake "
"projects. This guide and the complete example source code can be found in"
" the ``Help/guide/importing-exporting`` directory of the CMake source "
"code tree."
msgstr "In questa guida presenteremo il concetto di target :prop_tgt:`IMPORTED` e mostreremo come importare file eseguibili o librerie esistenti dal disco in un progetto CMake. Mostreremo poi come CMake supporta l'esportazione di target da un progetto basato su CMake e l'importazione in un altro. Infine, mostreremo come creare un pacchetto di un progetto con un file di configurazione per consentire una facile integrazione in altri progetti CMake. Questa guida e il codice sorgente di esempio completo si trovano nella directory ``Help/guide/importing-exporting`` dell'albero del codice sorgente di CMake."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:22
msgid "Importing Targets"
msgstr "Importazione dei Target"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:24
msgid ""
":prop_tgt:`IMPORTED` targets are used to convert files outside of a CMake"
" project into logical targets inside of the project. :prop_tgt:`IMPORTED`"
" targets are created using the ``IMPORTED`` option of the "
":command:`add_executable` and :command:`add_library` commands. No build "
"files are generated for :prop_tgt:`IMPORTED` targets. Once imported, "
":prop_tgt:`IMPORTED` targets may be referenced like any other target "
"within the project and provide a convenient, flexible reference to "
"outside executables and libraries."
msgstr "I target :prop_tgt:`IMPORTED` vengono utilizzati per convertire file all'esterno di un progetto CMake in target logici all'interno del progetto. I target :prop_tgt:`IMPORTED` vengono creati utilizzando l'opzione ``IMPORTED`` dei comandi :command:`add_executable` e :command:`add_library`. Nessun file di build viene generato per i target :prop_tgt:`IMPORTED` targets. Una volta importati, i target :prop_tgt:`IMPORTED` possono essere referenziati come qualsiasi altro target all'interno del progetto e forniscono un riferimento comodo e flessibile a eseguibili e librerie esterne."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:33
msgid ""
"By default, the :prop_tgt:`IMPORTED` target name has scope in the "
"directory in which it is created and below. We can use the ``GLOBAL`` "
"option to extended visibility so that the target is accessible globally "
"in the build system."
msgstr "Per default, il nome del target :prop_tgt:`IMPORTED` ha uno \"scope\" nella directory in cui è stato creato e al di sotto. Possiamo utilizzare l'opzione ``GLOBAL`` per estendere lo scope in modo che il target sia accessibile globalmente nel sistema di build."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:37
msgid ""
"Details about the :prop_tgt:`IMPORTED` target are specified by setting "
"properties whose names begin in ``IMPORTED_`` and ``INTERFACE_``. For "
"example, :prop_tgt:`IMPORTED_LOCATION` contains the full path to the "
"target on disk."
msgstr "I dettagli sul target :prop_tgt:`IMPORTED` vengono specificati impostando le proprietà i cui nomi iniziano con ``IMPORTED_`` e ``INTERFACE_``. Ad esempio, :prop_tgt:`IMPORTED_LOCATION` contiene il percorso completo del target su disco."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:43
msgid "Importing Executables"
msgstr "Importazione di Eseguibili"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:45
msgid ""
"To start, we will walk through a simple example that creates an "
":prop_tgt:`IMPORTED` executable target and then references it from the "
":command:`add_custom_command` command."
msgstr "Per iniziare, esamineremo un semplice esempio che crea un target eseguibile :prop_tgt:`IMPORTED` e poi vi fa riferimento dal comando :command:`add_custom_command`."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:49
msgid ""
"We'll need to do some setup to get started. We want to create an "
"executable that when run creates a basic ``main.cc`` file in the current "
"directory. The details of this project are not important. Navigate to "
"``Help/guide/importing-exporting/MyExe``, create a build directory, run "
":manual:`cmake <cmake(1)>` and build and install the project."
msgstr "Avremo bisogno di fare qualche configurazione per iniziare. Vogliamo creare un eseguibile che quando viene eseguito crea un file elementare ``main.cc`` nella directory corrente. I dettagli di questo progetto non sono importanti. Passare a ``Help/guide/importing-exporting/MyExe``, creare una directory di build, eseguire :manual:`cmake <cmake(1)>` e creare e installare il progetto."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:67
msgid ""
"Now we can import this executable into another CMake project. The source "
"code for this section is available in ``Help/guide/importing-"
"exporting/Importing``. In the CMakeLists file, use the "
":command:`add_executable` command to create a new target called "
"``myexe``. Use the ``IMPORTED`` option to tell CMake that this target "
"references an executable file located outside of the project. No rules "
"will be generated to build it and the :prop_tgt:`IMPORTED` target "
"property will be set  to ``true``."
msgstr "Ora possiamo importare questo eseguibile in un altro progetto CMake. Il codice sorgente di questa sezione è disponibile in ``Help/guide/importing-exporting/Importing``. Nel file CMakeLists, si usa il comando :command:`add_executable` per creare un nuovo target chiamato ``myexe``. Usare l'opzione ``IMPORTED`` per indicare a CMake che questo target fa riferimento a un file eseguibile situato all'esterno del progetto. Non verrà generata alcuna regola per costruirlo e la proprietà del target :prop_tgt:`IMPORTED` verrà impostata su ``true``."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:80
msgid ""
"Next, set the :prop_tgt:`IMPORTED_LOCATION` property of the target using "
"the :command:`set_property` command. This will tell CMake the location of"
" the target on disk. The location may need to be adjusted to the "
"``<install location>`` specified in the previous step."
msgstr "Successivamente, si imposta la proprietà :prop_tgt:`IMPORTED_LOCATION` del target utilizzando il comando :command:`set_property`. Questo indicherà a CMake la posizione del target sul disco. Potrebbe essere necessario modificare il percorso in ``<install location>`` specificato nel passaggio precedente."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:90
msgid ""
"We can now reference this :prop_tgt:`IMPORTED` target just like any "
"target built within the project. In this instance, let's imagine that we "
"want to use the generated source file in our project. Use the "
":prop_tgt:`IMPORTED` target in the :command:`add_custom_command` command:"
msgstr "Ora possiamo fare riferimento a questo target :prop_tgt:`IMPORTED` proprio come qualsiasi target creato all'interno del progetto. In questo caso, immaginiamo di voler utilizzare il file sorgente generato nel nostro progetto. Si usa il target :prop_tgt:`IMPORTED` nel comando :command:`add_custom_command`:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:100
msgid ""
"As ``COMMAND`` specifies an executable target name, it will automatically"
" be replaced by the location of the executable given by the "
":prop_tgt:`IMPORTED_LOCATION` property above."
msgstr "Poiché ``COMMAND`` specifica un nome di target dell'eseguibile, verrà automaticamente sostituito dalla posizione dell'eseguibile fornita dalla proprietà :prop_tgt:`IMPORTED_LOCATION` di cui sopra."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:104
msgid "Finally, use the output from :command:`add_custom_command`:"
msgstr "Infine, si usa l'output di :command:`add_custom_command`:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:111
msgid "Importing Libraries"
msgstr "Importazione di Librerie"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:113
msgid ""
"In a similar manner, libraries from other projects may be accessed "
"through :prop_tgt:`IMPORTED` targets."
msgstr "In modo simile, è possibile accedere alle librerie di altri progetti tramite target :prop_tgt:`IMPORTED`."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:116
msgid ""
"Note: The full source code for the examples in this section is not "
"provided and is left as an exercise for the reader."
msgstr "Nota: Il codice sorgente completo per gli esempi in questa sezione non viene fornito e viene lasciato come esercizio per il lettore."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:119
msgid ""
"In the CMakeLists file, add an :prop_tgt:`IMPORTED` library and specify "
"its location on disk:"
msgstr "Nel file CMakeLists, si aggiunge una libreria :prop_tgt:`IMPORTED` e se ne specifica la posizione sul disco:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:128
msgid "Then use the :prop_tgt:`IMPORTED` library inside of our project:"
msgstr "Poi si usa la libreria :prop_tgt:`IMPORTED` all'interno del progetto:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:136
msgid "On Windows, a .dll and its .lib import library may be imported together:"
msgstr "Su Windows, un file .dll e la relativa libreria di importazione .lib possono essere importati insieme:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:148
msgid ""
"A library with multiple configurations may be imported with a single "
"target:"
msgstr "Una libreria con più configurazioni può essere importata con un unico target:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:163
msgid ""
"The generated build system will link ``myexe`` to ``m.lib`` when built in"
" the release configuration, and ``md.lib`` when built in the debug "
"configuration."
msgstr "Il sistema di build generato linkerà  ``myexe`` a ``m.lib`` nella build nella configurazione di release e a ``md.lib`` nella configurazione di debug."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:167
msgid "Exporting Targets"
msgstr "Esportazione dei Target"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:169
msgid ""
"While :prop_tgt:`IMPORTED` targets on their own are useful, they still "
"require that the project that imports them knows the locations of the "
"target files on disk. The real power of :prop_tgt:`IMPORTED`  targets is "
"when the project providing the target files also provides a CMake file to"
" help import them. A project can be setup to produce the necessary "
"information so that it can easily be used by other CMake projects be it "
"from a build directory, a local install or when packaged."
msgstr "Anche se i target :prop_tgt:`IMPORTED` da soli sono utili, richiedono comunque che il progetto che li importa conosca le posizioni dei loro file sul disco. Il vero potere dei target :prop_tgt:`IMPORTED` è quando il progetto che ne fornisce i file fornisce anche un file CMake per importarli. Un progetto può essere configurato per produrre le informazioni necessarie in modo che possa essere facilmente utilizzato da altri progetti CMake da una directory di build, da un'installazione locale o quando inserito in un pacchetto."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:177
msgid ""
"In the remaining sections, we will walk through a set of example projects"
" step-by-step. The first project will create and install a library and "
"corresponding CMake configuration and package files. The second project "
"will use the generated package."
msgstr "Nelle restanti sezioni, esamineremo passo dopo passo una serie di progetti di esempio. Il primo progetto creerà e installerà una libreria e la configurazione CMake corrispondente e i file del pacchetto. Il secondo progetto utilizzerà il pacchetto generato."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:182
msgid ""
"Let's start by looking at the ``MathFunctions`` project in the "
"``Help/guide/importing-exporting/MathFunctions`` directory. Here we have "
"a header file ``MathFunctions.h`` that declares a ``sqrt`` function:"
msgstr "Iniziamo guardando il progetto ``MathFunctions`` nella directory ``Help/guide/importing-exporting/MathFunctions``. Qui abbiamo un file di header ``MathFunctions.h`` che dichiara una funzione ``sqrt``:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:189
msgid "And a corresponding source file ``MathFunctions.cxx``:"
msgstr "E un file sorgente corrispondente ``MathFunctions.cxx``:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:194
msgid ""
"Don't worry too much about the specifics of the C++ files, they are just "
"meant to be a simple example that will compile and run on many build "
"systems."
msgstr "Non ci si preoccupi troppo delle specifiche dei file C++, sono pensati solo per essere un semplice esempio che verrà compilato ed eseguito su molti sistemi di build."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:197
msgid ""
"Now we can create a ``CMakeLists.txt`` file for the ``MathFunctions`` "
"project. Start by specifying the :command:`cmake_minimum_required` "
"version and :command:`project` name:"
msgstr "Ora possiamo creare un file ``CMakeLists.txt`` per il progetto ``MathFunctions``. Si inizia specificando la versione di :command:`cmake_minimum_required` e il nome del :command:`project`:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:205
msgid ""
"Create a library called ``MathFunctions`` with the :command:`add_library`"
" command:"
msgstr "Si crea una libreria chiamata ``MathFunctions`` col comando :command:`add_library`:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:213
msgid ""
"And then use the :command:`target_include_directories` command to specify"
" the include directories for the target:"
msgstr "Poi si usa il comando :command:`target_include_directories` per specificare le directory di inclusione per il target:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:221
msgid ""
"We need to tell CMake that we want to use different include directories "
"depending on if we're building the library or using it from an installed "
"location. If we don't do this, when CMake creates the export information "
"it will export a path that is specific to the current build directory and"
" will not be valid for other projects. We can use :manual:`generator "
"expressions <cmake-generator-expressions(7)>` to specify that if we're "
"building the library include the current source directory. Otherwise, "
"when installed, include the ``include`` directory. See the `Creating "
"Relocatable Packages`_ section for more details."
msgstr "Dobbiamo dire a CMake che vogliamo utilizzare directory di inclusione diverse a seconda che stiamo costruendo la libreria o utilizzandola da una posizione installata. Se non lo facciamo, quando CMake crea le informazioni di esportazione esporterà un percorso specifico per la directory di build corrente e non sarà valido per altri progetti. Possiamo usare :manual:`generator expressions <cmake-generator-expressions(7)>` per specificare che se stiamo \"buildando\" la libreria deve includere la directory sorgente corrente. Altrimenti, una volta installato, include la directory ``include``. Consultare la sezione `Creazione di Pacchetti Rilocabili`_ per maggiori dettagli."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:231
msgid ""
"The :command:`install(TARGETS)` and :command:`install(EXPORT)` commands "
"work together to install both targets (a library in our case) and a CMake"
" file designed to make it easy to import the targets into another CMake "
"project."
msgstr "I comandi :command:`install(TARGETS)` e :command:`install(EXPORT)` lavorano insieme per installare entrambi i target (una libreria nel nostro caso) e un file CMake progettato per semplificare l'importazione dei target in un altro progetto CMake."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:235
msgid ""
"First, in the :command:`install(TARGETS)` command we will specify the "
"target, the ``EXPORT`` name and the destinations that tell CMake where to"
" install the targets."
msgstr "Innanzitutto, nel comando :command:`install(TARGETS)` specificheremo il target, il nome ``EXPORT`` e le destinazioni che indicano a CMake dove installare i target."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:244
msgid ""
"Here, the ``EXPORT`` option tells CMake to create an export called "
"``MathFunctionsTargets``. The generated :prop_tgt:`IMPORTED` targets have"
" appropriate properties set to define their :ref:`usage requirements "
"<Target Usage Requirements>`, such as "
":prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES`, "
":prop_tgt:`INTERFACE_COMPILE_DEFINITIONS` and other relevant built-in "
"``INTERFACE_`` properties.  The ``INTERFACE`` variant of user-defined "
"properties listed in :prop_tgt:`COMPATIBLE_INTERFACE_STRING` and other "
":ref:`Compatible Interface Properties` are also propagated to the "
"generated :prop_tgt:`IMPORTED` targets. For example, in this case, the "
":prop_tgt:`IMPORTED` target will have its "
":prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES` property populated with the "
"directory specified by the ``INCLUDES DESTINATION`` property. As a "
"relative path was given, it is treated as relative to the "
":variable:`CMAKE_INSTALL_PREFIX`."
msgstr "Qui, l'opzione ``EXPORT`` dice a CMake di creare un'esportazione chiamata ``MathFunctionsTargets``. I target :prop_tgt:`IMPORTED` generati hanno proprietà appropriate impostate per definire i loro :ref:`requisiti di utilizzo <Target Usage Requirements>`, come :prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES`, :prop_tgt:`INTERFACE_COMPILE_DEFINITIONS` e altre rilevanti proprietà native [built-in] ``INTERFACE_``.  La variante ``INTERFACE`` delle proprietà definite dall'utente elencate in :prop_tgt:`COMPATIBLE_INTERFACE_STRING` e altre :ref:`Compatible Interface Properties` vengono propagate anche ai target :prop_tgt:`IMPORTED` generati. Ad esempio, in questo caso, il target :prop_tgt:`IMPORTED` avrà la sua proprietà :prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES` popolata con la directory specificata dalla proprietà ``INCLUDES DESTINATION``. Poiché è stato fornito un percorso relativo, viene trattato come relativo a :variable:`CMAKE_INSTALL_PREFIX`."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:260
msgid "Note, we have *not* asked CMake to install the export yet."
msgstr "Notare, *non* abbiamo ancora chiesto a CMake di installare l'export."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:262
msgid ""
"We don't want to forget to install the ``MathFunctions.h`` header file "
"with the :command:`install(FILES)` command. The header file should be "
"installed to the ``include`` directory, as specified by the "
":command:`target_include_directories` command above."
msgstr "Non vogliamo dimenticare di installare il file header ``MathFunctions.h`` col comando :command:`install(FILES)`. Il file di intestazione dovrebbe essere installato nella directory ``include``, come specificato dal comando :command:`target_include_directories` sopra."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:272
msgid ""
"Now that the ``MathFunctions`` library and header file are installed, we "
"also need to explicitly install the ``MathFunctionsTargets``  export "
"details. Use the :command:`install(EXPORT)` command to export the targets"
" in ``MathFunctionsTargets``, as defined by the  "
":command:`install(TARGETS)` command."
msgstr "Ora che la libreria ``MathFunctions`` e il file header sono installati, dobbiamo anche installare esplicitamente i dettagli di esportazione di ``MathFunctionsTargets``. Utilizzare il comando :command:`install(EXPORT)` per esportare i target in ``MathFunctionsTargets``, come definito dal comando :command:`install(TARGETS)`."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:283
msgid ""
"This command generates the ``MathFunctionsTargets.cmake`` file and "
"arranges to install it to ``lib/cmake``. The file contains code suitable "
"for use by downstreams to import all targets listed in the install "
"command from the installation tree."
msgstr "Questo comando genera il file ``MathFunctionsTargets.cmake`` e provvede ad installarlo in ``lib/cmake``. Il file contiene codice utilizzabile dai downstream per importare tutti i target elencati nel comando install dall'albero di installazione."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:288
msgid ""
"The ``NAMESPACE`` option will prepend ``MathFunctions::`` to  the target "
"names as they are written to the export file. This convention of double-"
"colons gives CMake a hint that the name is an  :prop_tgt:`IMPORTED` "
"target when it is used by downstream projects. This way, CMake can issue "
"a diagnostic message if the package providing it was not found."
msgstr "L'opzione ``NAMESPACE`` anteporrà ``MathFunctions::`` ai nomi dei target mentre vengono scritti nel file export. Questa convenzione dei doppi due-punti fornisce a CMake un suggerimento sul fatto che il nome è un target :prop_tgt:`IMPORTED` quando viene utilizzato dai progetti downstream. In questo modo, CMake può emettere un messaggio diagnostico se il pacchetto che lo fornisce non è stato trovato."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:294
msgid ""
"The generated export file contains code that creates an "
":prop_tgt:`IMPORTED` library."
msgstr "Il file di esportazione generato contiene il codice che crea una libreria :prop_tgt:`IMPORTED`."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:305
msgid ""
"This code is very similar to the example we created by hand in the "
"`Importing Libraries`_ section. Note that ``${_IMPORT_PREFIX}`` is "
"computed relative to the file location."
msgstr "Questo codice è molto simile all'esempio che abbiamo creato manualmente nella sezione `Importazione di Librerie`_. Notare che ``${_IMPORT_PREFIX}`` viene calcolato in relazione alla posizione del file."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:309
msgid ""
"An outside project may load this file with the :command:`include` command"
" and reference the ``MathFunctions`` library from the installation tree "
"as if it were built in its own tree. For example:"
msgstr "Un progetto esterno può caricare questo file col comando :command:`include` e fare riferimento alla libreria ``MathFunctions`` dall'albero di installazione come se fosse creata nel proprio albero. Per esempio:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:320
msgid ""
"Line 1 loads the target CMake file. Although we only exported a single "
"target, this file may import any number of targets. Their locations are "
"computed relative to the file location so that the install tree may be "
"easily moved. Line 3 references the imported ``MathFunctions`` library. "
"The resulting build system will link to the library from its installed "
"location."
msgstr "La riga 1 carica il file CMake del target. Anche se abbiamo esportato un solo target, questo file può importare un numero qualsiasi di target. Le loro posizioni vengono calcolate rispetto a quella del file in modo che l'albero di installazione possa essere facilmente spostato. La riga 3 fa riferimento alla libreria importata ``MathFunctions``. Il sistema di build risultante linkerà la libreria dalla posizione di installazione."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:326
msgid "Executables may also be exported and imported using the same process."
msgstr "Gli eseguibili possono anche essere esportati e importati utilizzando lo stesso processo."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:328
msgid ""
"Any number of target installations may be associated with the same export"
" name. Export names are considered global so any directory may contribute"
" a target installation. The :command:`install(EXPORT)` command only needs"
" to be called once to install a file that references all targets. Below "
"is an example of how multiple exports may be combined into a single "
"export file, even if they are in different subdirectories of the project."
msgstr "Allo stesso nome di esportazione può essere associato un numero qualsiasi di installazioni di target. I nomi di esportazione sono considerati globali, quindi qualsiasi directory può contribuire a un'installazione di un target. Il comando :command:`install(EXPORT)` deve essere chiamato solo una volta per installare un file che fa riferimento a tutti i target. Di seguito è riportato un esempio di come è possibile combinare più esportazioni in un unico file export, anche se si trovano in sottodirectory diverse del progetto."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:352
msgid "Creating Packages"
msgstr "Creazione di Pacchetti"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:354
msgid ""
"At this point, the ``MathFunctions`` project is exporting the target "
"information required to be used by other projects. We can make this "
"project even easier for other projects to use by generating a "
"configuration file so that the CMake :command:`find_package` command can "
"find our project."
msgstr "A questo punto, il progetto ``MathFunctions`` sta esportando le informazioni richieste del target per essere utilizzate da altri progetti. Possiamo rendere questo progetto ancora più semplice da utilizzare per altri progetti generando un file di configurazione in modo che il comando CMake :command:`find_package` possa trovare il nostro progetto."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:359
msgid ""
"To start, we will need to make a few additions to the ``CMakeLists.txt`` "
"file. First, include the :module:`CMakePackageConfigHelpers` module to "
"get access to some helper functions for creating config files."
msgstr "Per iniziare, dovremo fare alcune aggiunte al file ``CMakeLists.txt``. Innanzitutto, si include il modulo :module:`CMakePackageConfigHelpers` per ottenere l'accesso ad alcune funzioni di supporto per la creazione dei file di configurazione."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:368
msgid ""
"Then we will create a package configuration file and a package version "
"file."
msgstr "Poi creeremo un file di configurazione e un file della versione del pacchetto."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:371
msgid "Creating a Package Configuration File"
msgstr "Creazione di un File di Configurazione del Pacchetto"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:373
msgid ""
"Use the :command:`configure_package_config_file` command provided by the "
":module:`CMakePackageConfigHelpers` to generate the package configuration"
" file. Note that this command should be used instead of the plain "
":command:`configure_file` command. It helps to ensure that the resulting "
"package is relocatable by avoiding hardcoded paths in the installed "
"configuration file. The path given to ``INSTALL_DESTINATION`` must  be "
"the destination where the ``MathFunctionsConfig.cmake`` file will be "
"installed. We will examine the contents of the package configuration file"
" in the next section."
msgstr "Usare il comando :command:`configure_package_config_file` fornito da :module:`CMakePackageConfigHelpers` per generare il file di configurazione del pacchetto. Notare che questo comando dovrebbe essere usato al posto del semplice comando :command:`configure_file`. Aiuta a garantire che il pacchetto risultante sia riposizionabile evitando percorsi codificati nel file di configurazione installato. Il percorso fornito a ``INSTALL_DESTINATION`` deve essere la destinazione in cui verrà installato il file ``MathFunctionsConfig.cmake``. Esamineremo il contenuto del file di configurazione del pacchetto nella prossima sezione."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:388
msgid ""
"Install the generated configuration files with the "
":command:`INSTALL(files)` command. Both "
"``MathFunctionsConfigVersion.cmake`` and ``MathFunctionsConfig.cmake`` "
"are installed to the same location, completing the package."
msgstr "Installare i file di configurazione generati col comando :command:`INSTALL(files)`. Sia ``MathFunctionsConfigVersion.cmake`` che ``MathFunctionsConfig.cmake`` sono installati nella stessa posizione, completando il pacchetto."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:398
msgid ""
"Now we need to create the package configuration file itself. In this "
"case, the ``Config.cmake.in`` file is very simple but sufficient to allow"
" downstreams to use the :prop_tgt:`IMPORTED` targets."
msgstr "Ora dobbiamo creare il file di configurazione del pacchetto stesso. In questo caso, il file ``Config.cmake.in`` è molto semplice ma sufficiente per consentire ai downstream di utilizzare i target :prop_tgt:`IMPORTED`."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:404
msgid ""
"The first line of the file contains only the string ``@PACKAGE_INIT@``. "
"This expands when the file is configured and allows the use of "
"relocatable paths prefixed with ``PACKAGE_``. It also provides the "
"``set_and_check()`` and ``check_required_components()`` macros."
msgstr "La prima riga del file contiene solo la stringa ``@PACKAGE_INIT@``. Questo si espande quando il file viene configurato e consente l'uso di percorsi riposizionabili col prefisso ``PACKAGE_``. Fornisce inoltre le macro ``set_and_check()`` e ``check_required_components()``."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:409
msgid ""
"The ``check_required_components`` helper macro ensures that all "
"requested, non-optional components have been found by checking the "
"``<Package>_<Component>_FOUND`` variables for all required components. "
"This macro should be called at the end of the package configuration file "
"even if the package does not have any components. This way, CMake can "
"make sure that the downstream project hasn't specified any non-existent "
"components. If ``check_required_components`` fails, the "
"``<Package>_FOUND`` variable is set to FALSE, and the package is "
"considered to be not found."
msgstr "La macro helper ``check_required_components`` garantisce che tutti i componenti richiesti e non opzionali siano stati trovati controllando le variabili ``<Package>_<Component>_FOUND`` per tutti i componenti richiesti. Questa macro dovrebbe essere richiamata alla fine del file di configurazione del pacchetto anche se il pacchetto non ha alcun componente. In questo modo, CMake può assicurarsi che il progetto downstream non abbia specificato componenti inesistenti. Se ``check_required_components`` fallisce, la variabile ``<Package>_FOUND`` viene impostata su FALSE e il pacchetto viene considerato non trovato."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:418
msgid ""
"The ``set_and_check()`` macro should be used in configuration files "
"instead of the normal ``set()`` command for setting directories and file "
"locations. If a referenced file or directory does not exist, the macro "
"will fail."
msgstr "La macro ``set_and_check()`` dovrebbe essere utilizzata nei file di configurazione invece del normale comando ``set()`` per impostare directory e posizioni dei file. Se un file o una directory a cui si fa riferimento non esiste, la macro fallirà."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:422
msgid ""
"If any macros should be provided by the ``MathFunctions`` package, they "
"should be in a separate file which is installed to the same location as "
"the ``MathFunctionsConfig.cmake`` file, and included from there."
msgstr "Se delle macro devono essere fornite dal pacchetto ``MathFunctions``, dovrebbero trovarsi in un file separato installato nella stessa posizione del file ``MathFunctionsConfig.cmake`` e incluse da lì."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:426
msgid ""
"**All required dependencies of a package must also be found in the "
"package configuration file.** Let's imagine that we require the ``Stats``"
" library in our project. In the CMakeLists file, we would add:"
msgstr "**Tutte le dipendenze richieste di un pacchetto si devono trovare anche nel file di configurazione del pacchetto**. Immaginiamo di aver bisogno della libreria ``Stats`` nel nostro progetto. Nel file CMakeLists, aggiungeremmo:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:435
msgid ""
"As the ``Stats::Types`` target is a ``PUBLIC`` dependency of "
"``MathFunctions``, downstreams must also find the ``Stats`` package and "
"link to the ``Stats::Types`` library.  The ``Stats`` package should be "
"found in the configuration file to ensure this."
msgstr "Dato che il target ``Stats::Types`` è una dipendenza ``PUBLIC`` di ``MathFunctions``, i downstream devono anche trovare il pacchetto ``Stats`` e linkarlo alla libreria ``Stats::Types``.  Per garantire ciò, nel file di configurazione dovrebbe essere presente il pacchetto ``Stats``."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:445
msgid ""
"The ``find_dependency`` macro from the :module:`CMakeFindDependencyMacro`"
" module helps by propagating  whether the package is ``REQUIRED``, or "
"``QUIET``, etc. The ``find_dependency`` macro also sets "
"``MathFunctions_FOUND`` to ``False`` if the dependency is not found, "
"along with a diagnostic that the ``MathFunctions`` package cannot be used"
" without the ``Stats`` package."
msgstr "La macro ``find_dependency`` dal modulo :module:`CMakeFindDependencyMacro` aiuta a propagare se il pacchetto è ``REQUIRED`` o ``QUIET``, ecc. La macro ``find_dependency`` imposta anche ``MathFunctions_FOUND`` a ``False`` se la dipendenza non viene trovata, insieme a una diagnostica che indica che il pacchetto ``MathFunctions`` non può essere utilizzato senza il pacchetto ``Stats``."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:452
msgid "**Exercise:** Add a required library to the ``MathFunctions`` project."
msgstr "**Esercizio:** Aggiungere la libreria richiesta al progetto``MathFunctions``."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:455
msgid "Creating a Package Version File"
msgstr "Creazione di un File di Versione del Pacchetto"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:457
msgid ""
"The :module:`CMakePackageConfigHelpers` module provides the "
":command:`write_basic_package_version_file` command for creating a simple"
" package version file.  This file is read by CMake when "
":command:`find_package` is called to determine the compatibility with the"
" requested version, and to set some version-specific variables such as "
"``<PackageName>_VERSION``, ``<PackageName>_VERSION_MAJOR``, "
"``<PackageName>_VERSION_MINOR``, etc. See :manual:`cmake-packages <cmake-"
"packages(7)>` documentation for more details."
msgstr "Il modulo :module:`CMakePackageConfigHelpers` fornisce il comando :command:`write_basic_package_version_file` per creare un semplice file di versione del pacchetto.  Questo file viene letto da CMake quando viene chiamato :command:`find_package` per determinare la compatibilità con la versione richiesta e per impostare alcune variabili specifiche della versione come ``<PackageName>_VERSION``, ``<PackageName>_VERSION_MAJOR``, ``<PackageName>_VERSION_MINOR``, ecc. Consultare la documentazione :manual:`cmake-packages <cmake-packages(7)>` per maggiori dettagli."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:470
msgid ""
"In our example, ``MathFunctions_MAJOR_VERSION`` is defined as a "
":prop_tgt:`COMPATIBLE_INTERFACE_STRING` which means that it must be "
"compatible among the dependencies of any depender. By setting this custom"
" defined user property in this version and in the next version of "
"``MathFunctions``, :manual:`cmake <cmake(1)>` will issue a diagnostic if "
"there is an attempt to use version 3 together with version 4.  Packages "
"can choose to employ such a pattern if different major versions of the "
"package are designed to be incompatible."
msgstr "Nel nostro esempio, ``MathFunctions_MAJOR_VERSION`` è definito come una :prop_tgt:`COMPATIBLE_INTERFACE_STRING`, il che significa che deve essere compatibile con qualsiasi dipendenza. Impostando questa proprietà utente personalizzata in questa versione e nella prossima di ``MathFunctions``, :manual:`cmake <cmake(1)>` emetterà una diagnostica se si tenta di utilizzare la versione 3 insieme alla versione 4.  I pacchetti possono scegliere di utilizzare tale modello se diverse versioni \"major\" del pacchetto sono progettate per essere incompatibili."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:481
msgid "Exporting Targets from the Build Tree"
msgstr "Esportare i Target dall'albero di Build"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:483
msgid ""
"Typically, projects are built and installed before being used by an "
"outside project. However, in some cases, it is desirable to export "
"targets directly from a build tree. The targets may then be used by an "
"outside project that references the build tree with no installation "
"involved. The :command:`export` command is used to generate a file "
"exporting targets from a project build tree."
msgstr "In genere, i progetti vengono creati e installati prima di essere utilizzati da un progetto esterno. Tuttavia, in alcuni casi, è preferibile esportare i target direttamente da un albero di build. I target possono quindi essere utilizzati da un progetto esterno che fa riferimento all'albero di build senza che sia coinvolta alcuna installazione. Il comando :command:`export` viene utilizzato per generare un file di export dei target da un albero di build del progetto."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:489
msgid ""
"If we want our example project to also be used from a build directory we "
"only have to add the following to ``CMakeLists.txt``:"
msgstr "Per usare il progetto di esempio anche da una directory di build dobbiamo solo aggiungere quanto segue a ``CMakeLists.txt``:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:496
msgid ""
"Here we use the :command:`export` command to generate the export targets "
"for the build tree. In this case, we'll create a file called "
"``MathFunctionsTargets.cmake`` in the ``cmake`` subdirectory of the build"
" directory. The generated file contains the required code to import the "
"target and may be loaded by an outside project that is aware of the "
"project build tree. This file is specific to the build-tree, and **is not"
" relocatable**."
msgstr "Qui utilizziamo il comando :command:`export` per generare gli export dei target per l'albero di build. In questo caso, creeremo un file chiamato ``MathFunctionsTargets.cmake`` nella subdirectory ``cmake`` dellla directory di build. Il file generato contiene il codice richiesto per importare il target e può essere caricato da un progetto esterno che conosce l'albero di build del progetto. Questo file è specifico dell'albero di build **non è riposizionabile**."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:503
msgid ""
"It is possible to create a suitable package configuration file and "
"package version file to define a package for the build tree which may be "
"used without installation.  Consumers of the build tree can simply ensure"
" that the :variable:`CMAKE_PREFIX_PATH` contains the build directory, or "
"set the ``MathFunctions_DIR`` to ``<build_dir>/MathFunctions`` in the "
"cache."
msgstr "È possibile creare un file di configurazione del pacchetto e uno di versione adatti per definire un pacchetto per l'albero di build utilizzabile senza installazione.  Gli utenti dell'albero di build possono semplicemente assicurarsi che :variable:`CMAKE_PREFIX_PATH` contenga la directory di build o impostare ``MathFunctions_DIR`` a ``<build_dir>/MathFunctions`` nella cache."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:509
msgid ""
"An example application of this feature is for building an executable on a"
" host platform when cross-compiling. The project containing the "
"executable may be built on the host platform and then the project that is"
" being cross-compiled for another platform may load it."
msgstr "Un esempio di applicazione di questa funzionalità è la creazione di un eseguibile su una piattaforma host durante la cross-compilazione. Il progetto contenente l'eseguibile può essere creato sulla piattaforma host e quindi il progetto cross-compilato per un'altra piattaforma può caricarlo."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:515
msgid "Building and Installing a Package"
msgstr "Creazione e Installazione di un Pacchetto"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:517
msgid ""
"At this point, we have generated a relocatable CMake configuration for "
"our project that can be used after the project has been installed. Let's "
"try to build the ``MathFunctions`` project:"
msgstr "A questo punto, abbiamo generato una configurazione CMake rilocabile per il progetto utilizzabile dopo l'installazione del progetto. Proviamo a \"buildare\" il progetto ``MathFunctions``:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:528
msgid ""
"In the build directory, notice that the file "
"``MathFunctionsTargets.cmake`` has been created in the ``cmake`` "
"subdirectory."
msgstr "Nella directory di build, notare che il file ``MathFunctionsTargets.cmake`` è stato creato nella sottodirectory ``cmake``."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:531
msgid "Now install the project:"
msgstr "Ora si installa il progetto:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:538
msgid "Creating Relocatable Packages"
msgstr "Creazione di Pacchetti Rilocabili"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:540
msgid ""
"Packages created by :command:`install(EXPORT)` are designed to be "
"relocatable, using paths relative to the location of the package itself. "
"They must not reference absolute paths of files on the machine where the "
"package is built that will not exist on the machines where the package "
"may be installed."
msgstr "I pacchetti creati da :command:`install(EXPORT)` sono progettati per essere riposizionabili, utilizzando percorsi relativi alla posizione del pacchetto stesso. Non devono fare riferimento a path assoluti sulla macchina su cui è creato il pacchetto che non esisteranno sulle macchine su cui il pacchetto potrebbe essere installato."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:545
msgid ""
"When defining the interface of a target for ``EXPORT``, keep in mind that"
" the include directories should be specified as relative paths to the "
":variable:`CMAKE_INSTALL_PREFIX` but should not explicitly include the "
":variable:`CMAKE_INSTALL_PREFIX`:"
msgstr "Quando si definisce l'interfaccia di un target per ``EXPORT``, tenere presente che le directory di inclusione devono essere specificate come percorsi relativi alla :variable:`CMAKE_INSTALL_PREFIX` ma non devono includere esplicitamente la :variable:`CMAKE_INSTALL_PREFIX`:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:562
msgid ""
"The ``$<INSTALL_PREFIX>`` :manual:`generator expression <cmake-generator-"
"expressions(7)>` may be used as a placeholder for the install prefix "
"without resulting in a non-relocatable package.  This is necessary if "
"complex generator expressions are used:"
msgstr "L'espressione ``$<INSTALL_PREFIX>`` del :manual:`generator expression <cmake-generator-expressions(7)>` è utilizzabile come segnaposto per il prefisso di installazione senza risultare in un pacchetto non riposizionabile.  Ciò è necessario se si utilizzano \"generator expression\" complesse:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:574
msgid ""
"This also applies to paths referencing external dependencies. It is not "
"advisable to populate any properties which may contain paths, such as "
":prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES` or "
":prop_tgt:`INTERFACE_LINK_LIBRARIES`, with paths relevant to "
"dependencies. For example, this code may not work well for a relocatable "
"package:"
msgstr "Questo vale anche per i percorsi che fanno riferimento a dipendenze esterne. Non è consigliabile popolare le proprietà che possono contenere percorsi, come :prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES` e :prop_tgt:`INTERFACE_LINK_LIBRARIES`, con percorsi relativi alle dipendenze. Ad esempio, questo codice potrebbe non funzionare bene per un pacchetto rilocabile:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:589
msgid ""
"The referenced variables may contain the absolute paths to libraries and "
"include directories **as found on the machine the package was made on**. "
"This would create a package with hard-coded paths to dependencies not "
"suitable for relocation."
msgstr "Le variabili di riferimento possono contenere i percorsi assoluti delle librerie e includere directory **come si trovano sulla macchina su cui è stato creato il pacchetto**. Ciò creerebbe un pacchetto con percorsi alle dipendenze \"scolpiti\" non adatti al riposizionamento."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:594
msgid ""
"Ideally such dependencies should be used through their own :ref:`IMPORTED"
" targets <Imported Targets>` that have their own "
":prop_tgt:`IMPORTED_LOCATION` and usage requirement properties such as "
":prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES` populated appropriately.  Those"
" imported targets may then be used with the "
":command:`target_link_libraries` command for ``MathFunctions``:"
msgstr "Idealmente, tali dipendenze dovrebbero essere utilizzate attraverso i propri :ref:`target IMPORTED <Imported Targets>` che hanno le proprie :prop_tgt:`IMPORTED_LOCATION` e proprietà dei requisiti di utilizzo come :prop_tgt:`INTERFACE_INCLUDE_DIRECTORIES` popolate in modo appropriato.  Questi target importati possono quindi essere utilizzati col comando :command:`target_link_libraries` per ``MathFunctions``:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:605
msgid ""
"With this approach the package references its external dependencies only "
"through the names of :ref:`IMPORTED targets <Imported Targets>`. When a "
"consumer uses the installed package, the consumer will run the "
"appropriate :command:`find_package` commands (via the ``find_dependency``"
" macro described above) to find the dependencies and populate the "
"imported targets with appropriate paths on their own machine."
msgstr "Con questo approccio il pacchetto fa riferimento alle sue dipendenze esterne solo attraverso i nomi di :ref:`target IMPORTED <Imported Targets>`. Quando un \"consumer\" utilizza il pacchetto installato, eseguirà i comandi :command:`find_package` appropriati (tramite la macro ``find_dependency`` descritta sopra) per trovare le dipendenze e popolare i target importati con percorsi appropriati sul proprio computer."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:613
msgid "Using the Package Configuration File"
msgstr "Utilizzo dei File di Configurazione del Pacchetto"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:615
msgid ""
"Now we're ready to create a project to use the installed "
"``MathFunctions`` library. In this section we will be using source code "
"from ``Help\\guide\\importing-exporting\\Downstream``. In this directory,"
" there is a source file called ``main.cc`` that uses the "
"``MathFunctions`` library to calculate the square root of a given number "
"and then prints the results:"
msgstr "Ora siamo pronti per creare un progetto per utilizzare la libreria ``MathFunctions`` installata. In questa sezione utilizzeremo il codice sorgente da ``Help\\guide\\importing-exporting\\Downstream``. In questa directory c'è un file sorgente chiamato ``main.cc`` che usa la libreria ``MathFunctions`` per calcolare la radice quadrata di un dato numero e poi stampa i risultati:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:624
msgid ""
"As before, we'll start with the :command:`cmake_minimum_required` and "
":command:`project` commands in the ``CMakeLists.txt`` file. For this "
"project, we'll also specify the C++ standard."
msgstr "Come prima, inizieremo coi comandi :command:`cmake_minimum_required` e :command:`project` nel file ``CMakeLists.txt``. Per questo progetto specificheremo anche lo standard del C++."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:632
msgid "We can use the :command:`find_package` command:"
msgstr "Possiamo usare il comando :command:`find_package`:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:639
msgid "Create an exectuable:"
msgstr "Creare un eseguibile:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:646
msgid "And link to the ``MathFunctions`` library:"
msgstr "E linkarlo alla libreria ``MathFunctions``:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:652
msgid "That's it! Now let's try to build the ``Downstream`` project."
msgstr "Questo è tutto! Ora proviamo a buildare il progetto ``Downstream``."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:661
msgid "A warning may have appeared during CMake configuration:"
msgstr "Potrebbe essere apparso un warning durante la configurazione di CMake:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:681
msgid ""
"Set the ``CMAKE_PREFIX_PATH`` to where MathFunctions was installed "
"previously and try again. Ensure that the newly created executable runs "
"as expected."
msgstr "Impostare ``CMAKE_PREFIX_PATH`` sul punto in cui MathFunctions è stato installato in precedenza e riprovare. Assicurarsi che l'eseguibile appena creato venga eseguito come previsto."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:685
msgid "Adding Components"
msgstr "Aggiungere Componenti"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:687
msgid ""
"Let's edit the ``MathFunctions`` project to use components. The source "
"code for this section can be found in ``Help\\guide\\importing-"
"exporting\\MathFunctionsComponents``. The CMakeLists file for this "
"project adds two subdirectories: ``Addition`` and ``SquareRoot``."
msgstr "Modifichiamo il progetto ``MathFunctions`` per utilizzare i componenti. Il codice sorgente di questa sezione si trova in ``Help\\guide\\importing-exporting\\MathFunctionsComponents``. Il file CMakeLists per questo progetto aggiunge due sottodirectory: ``Addition`` e ``SquareRoot``."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:696
msgid "Generate and install the package configuration and package version files:"
msgstr "Generare e installare i file di configurazione e di versione del pacchetto:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:702
msgid ""
"If ``COMPONENTS`` are specified when the downstream uses "
":command:`find_package`, they are listed in the "
"``<PackageName>_FIND_COMPONENTS`` variable. We can use this variable to "
"verify that all necessary component targets are included in "
"``Config.cmake.in``. At the same time, this function will act as a custom"
" ``check_required_components`` macro to ensure that the downstream only "
"attempts to use supported components."
msgstr "Se vengono specificati ``COMPONENTS`` quando il downstream utilizza :command:`find_package`, vengono elencati nella variabile ``<PackageName>_FIND_COMPONENTS``. Possiamo usare questa variabile per verificare che tutti i componenti target necessari siano inclusi in ``Config.cmake.in``. Allo stesso tempo, questa funzione agirà come una macro custom ``check_required_components`` per garantire che il downstream tenti di utilizzare solo i componenti supportati."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:711
msgid ""
"Here, the ``MathFunctions_NOT_FOUND_MESSAGE`` is set to a diagnosis that "
"the package could not be found because an invalid component was "
"specified. This message variable can be set for any case where the "
"``_FOUND`` variable is set to ``False``, and will be displayed to the "
"user."
msgstr "Qui, ``MathFunctions_NOT_FOUND_MESSAGE`` è settato su una diagnosi secondo cui il pacchetto non è stato trovato perché è stato specificato un componente non valido. Questa variabile del messaggio può essere impostata per ogni caso in cui la variabile ``_FOUND`` è settata a ``False`` e verrà visualizzata all'utente."

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:716
msgid ""
"The ``Addition`` and ``SquareRoot`` directories are similar. Let's look "
"at one of the CMakeLists files:"
msgstr "Le directory ``Addition`` e ``SquareRoot`` sono simili. Diamo un'occhiata a uno dei file CMakeLists:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:722
msgid ""
"Now we can build the project as described in earlier sections. To test "
"using this package, we can use the project in ``Help\\guide\\importing-"
"exporting\\DownstreamComponents``. There's two differences from the "
"previous ``Downstream`` project. First, we need to find the package "
"components. Change the ``find_package`` line from:"
msgstr "Ora possiamo buildare il progetto come descritto nelle sezioni precedenti. Per testare l'utilizzo di questo pacchetto, possiamo utilizzare il progetto in ``Help\\guide\\importing-exporting\\DownstreamComponents``. Ci sono due differenze rispetto al precedente progetto ``Downstream``. Per prima cosa dobbiamo trovare i componenti del pacchetto. Cambiare la riga ``find_package`` da:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:733
#: ../../source/cmake/Help/guide/importing-exporting/index.rst:746
msgid "To:"
msgstr "A:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:740
msgid "and the ``target_link_libraries`` line from:"
msgstr "e la riga ``target_link_libraries`` da:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:753
msgid "In ``main.cc``, replace ``#include MathFunctions.h`` with:"
msgstr "In ``main.cc``, sostituire ``#include MathFunctions.h`` con:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:760
msgid "Finally, use the ``Addition`` library:"
msgstr "Infine, utilizzare la libreria ``Addition``:"

#: ../../source/cmake/Help/guide/importing-exporting/index.rst:767
msgid ""
"Build the ``Downstream`` project and confirm that it can find and use the"
" package components."
msgstr "Buildare il progetto ``Downstream`` e verificare che possa trovare e utilizzare i componenti del pacchetto."

#: ../../source/cmake/Help/guide/tutorial/index.rst:2
msgid "CMake Tutorial"
msgstr "Tutorial di CMake"

#: ../../source/cmake/Help/guide/tutorial/index.rst:11
msgid ""
"The CMake tutorial provides a step-by-step guide that covers common build"
" system issues that CMake helps address. Seeing how various topics all "
"work together in an example project can be very helpful. The tutorial "
"documentation and source code for examples can be found in the "
"``Help/guide/tutorial`` directory of the CMake source code tree. Each "
"step has its own subdirectory containing code that may be used as a "
"starting point. The tutorial examples are progressive so that each step "
"provides the complete solution for the previous step."
msgstr "I tutorial su CMake fornisce una guida passo passo che copre i problemi comuni del sistema di build che CMake aiuta a risolvere. Vedere come i vari argomenti lavorano insieme in un progetto di esempio può essere molto utile. La documentazione del tutorial e il codice sorgente degli esempi si trovano nella directory ``Help/guide/tutorial`` dell'albero del codice sorgente di CMake. Ogni passaggio ha la propria sottodirectory contenente il codice utilizzabile come punto di partenza. Gli esempi del tutorial sono progressivi in modo che ogni passaggio fornisca la soluzione completa per il passaggio precedente."

#: ../../source/cmake/Help/guide/tutorial/index.rst:21
msgid "A Basic Starting Point (Step 1)"
msgstr "Un Primo Punto di Partenza (Step 1)"

#: ../../source/cmake/Help/guide/tutorial/index.rst:23
msgid ""
"The most basic project is an executable built from source code files. For"
" simple projects, a three line ``CMakeLists.txt`` file is all that is "
"required. This will be the starting point for our tutorial. Create a "
"``CMakeLists.txt`` file in the ``Step1`` directory that looks like:"
msgstr "Il progetto più elementare è un eseguibile creato da file di codice sorgente. Per progetti semplici, tutto ciò che serve è un file ``CMakeLists.txt``. Questo sarà il punto di partenza del tutorial. Creare un file ``CMakeLists.txt`` nella directory ``Step1`` che assomigli a:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:39
msgid ""
"Note that this example uses lower case commands in the ``CMakeLists.txt``"
" file. Upper, lower, and mixed case commands are supported by CMake. The "
"source code for ``tutorial.cxx`` is provided in the ``Step1`` directory "
"and can be used to compute the square root of a number."
msgstr "Notare che questo esempio utilizza comandi in minuscolo nel file ``CMakeLists.txt``. I comandi maiuscoli, minuscoli e misti sono supportati da CMake. Il codice sorgente per ``tutorial.cxx`` è fornito nella directory ``Step1`` ed è utilizzabile per calcolare la radice quadrata di un numero."

#: ../../source/cmake/Help/guide/tutorial/index.rst:45
msgid "Adding a Version Number and Configured Header File"
msgstr "Aggiunta di un Numero di Versione e di un File di Header di Configurazione"

#: ../../source/cmake/Help/guide/tutorial/index.rst:47
msgid ""
"The first feature we will add is to provide our executable and project "
"with a version number. While we could do this exclusively in the source "
"code, using ``CMakeLists.txt`` provides more flexibility."
msgstr "La prima funzionalità che aggiungeremo è fornire all'eseguibile e al progetto un numero di versione. Sebbene potremmo farlo esclusivamente nel codice sorgente, l'utilizzo di ``CMakeLists.txt`` offre maggiore flessibilità."

#: ../../source/cmake/Help/guide/tutorial/index.rst:51
msgid ""
"First, modify the ``CMakeLists.txt`` file to use the :command:`project` "
"command to set the project name and version number."
msgstr "Innanzitutto, si modifica il file ``CMakeLists.txt`` per utilizzare il comando :command:`project` per impostare il nome del progetto e il numero della versione."

#: ../../source/cmake/Help/guide/tutorial/index.rst:58
msgid ""
"Then, configure a header file to pass the version number to the source "
"code:"
msgstr "Poi, si configura un file header per passare il numero di versione al codice sorgente:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:66
msgid ""
"Since the configured file will be written into the binary tree, we must "
"add that directory to the list of paths to search for include files. Add "
"the following lines to the end of the ``CMakeLists.txt`` file:"
msgstr "Poiché il file configurato verrà scritto nell'albero binario, dobbiamo aggiungere quella directory all'elenco dei percorsi in cui cercare i file include. Si aggiungono le seguenti righe alla fine del file ``CMakeLists.txt``:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:74
msgid ""
"Using your favorite editor, create ``TutorialConfig.h.in`` in the source "
"directory with the following contents:"
msgstr "Utilizzando un editor, si crea ``TutorialConfig.h.in`` nella directory sorgente con il seguente contenuto:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:80
msgid ""
"When CMake configures this header file the values for "
"``@Tutorial_VERSION_MAJOR@`` and ``@Tutorial_VERSION_MINOR@`` will be "
"replaced."
msgstr "Quando CMake configura questo file header, i valori per ``@Tutorial_VERSION_MAJOR@`` e ``@Tutorial_VERSION_MINOR@`` verranno rimpiazzati."

#: ../../source/cmake/Help/guide/tutorial/index.rst:84
msgid ""
"Next modify ``tutorial.cxx`` to include the configured header file, "
"``TutorialConfig.h``."
msgstr "Successivamente si modifica ``tutorial.cxx`` per includere il file header configurato , ``TutorialConfig.h``."

#: ../../source/cmake/Help/guide/tutorial/index.rst:87
msgid ""
"Finally, let's print out the executable name and version number by "
"updating ``tutorial.cxx`` as follows:"
msgstr "Infine, stampiamo il nome dell'eseguibile e il numero della versione aggiornando ``tutorial.cxx`` come segue:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:96
msgid "Specify the C++ Standard"
msgstr "Specificare lo standard del C++"

#: ../../source/cmake/Help/guide/tutorial/index.rst:98
msgid ""
"Next let's add some C++11 features to our project by replacing ``atof`` "
"with ``std::stod`` in ``tutorial.cxx``.  At the same time, remove "
"``#include <cstdlib>``."
msgstr "Successivamente aggiungiamo alcune funzionalità del C++11 al progetto sostituendo ``atof`` con ``std::stod`` in ``tutorial.cxx``.  Contemporaneamente si rimuove ``#include <cstdlib>``."

#: ../../source/cmake/Help/guide/tutorial/index.rst:107
msgid ""
"We will need to explicitly state in the CMake code that it should use the"
" correct flags. The easiest way to enable support for a specific C++ "
"standard in CMake is by using the :variable:`CMAKE_CXX_STANDARD` "
"variable. For this tutorial, set the :variable:`CMAKE_CXX_STANDARD` "
"variable in the ``CMakeLists.txt`` file to 11 and "
":variable:`CMAKE_CXX_STANDARD_REQUIRED` to True. Make sure to add the "
"``CMAKE_CXX_STANDARD`` declarations above the call to ``add_executable``."
msgstr "Dovremo dichiarare esplicitamente nel codice CMake che dovrebbe utilizzare i flag corretti. Il modo più semplice per abilitare il supporto per uno standard C++ specifico in CMake è utilizzare la variabile :variable:`CMAKE_CXX_STANDARD`. Per questo tutorial, si imposta la variabile :variable:`CMAKE_CXX_STANDARD` nel file ``CMakeLists.txt`` a 11 e :variable:`CMAKE_CXX_STANDARD_REQUIRED` a True. Si devono aggiungere le dichiarazioni ``CMAKE_CXX_STANDARD`` al di sopra della chiamata a ``add_executable``."

#: ../../source/cmake/Help/guide/tutorial/index.rst:120
msgid "Build and Test"
msgstr "Build e Test"

#: ../../source/cmake/Help/guide/tutorial/index.rst:122
msgid ""
"Run the :manual:`cmake <cmake(1)>` executable or the :manual:`cmake-gui "
"<cmake-gui(1)>` to configure the project and then build it with your "
"chosen build tool."
msgstr "Lanciare l'eseguibile :manual:`cmake <cmake(1)>` o :manual:`cmake-gui <cmake-gui(1)>` per configurare il progetto e quindi crearlo col tool di build scelto."

#: ../../source/cmake/Help/guide/tutorial/index.rst:126
msgid ""
"For example, from the command line we could navigate to the "
"``Help/guide/tutorial`` directory of the CMake source code tree and "
"create a build directory:"
msgstr "Ad esempio, dalla riga di comando potremmo navigare nella directory ``Help/guide/tutorial`` dell'albero del codice sorgente di CMake e creare una directory di build:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:134
msgid ""
"Next, navigate to the build directory and run CMake to configure the "
"project and generate a native build system:"
msgstr "Successivamente, si va nella directory di build e si esegue CMake per configurare il progetto e generare un sistema di build nativo:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:142
msgid "Then call that build system to actually compile/link the project:"
msgstr "Poi si chiama quel sistema di build per compilare/linkare effettivamente il progetto:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:148
msgid "Finally, try to use the newly built ``Tutorial`` with these commands:"
msgstr "Infine, provare a utilizzare il ``Tutorial`` appena creato con questi comandi:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:157
msgid "Adding a Library (Step 2)"
msgstr "Aggiunta di una libreria (Step 2)"

#: ../../source/cmake/Help/guide/tutorial/index.rst:159
msgid ""
"Now we will add a library to our project. This library will contain our "
"own implementation for computing the square root of a number. The "
"executable can then use this library instead of the standard square root "
"function provided by the compiler."
msgstr "Ora aggiungeremo una libreria al progetto Questa libreria conterrà l'implementazione per calcolare la radice quadrata di un numero. L'eseguibile può quindi utilizzare questa libreria invece della funzione radice quadrata standard fornita dal compilatore."

#: ../../source/cmake/Help/guide/tutorial/index.rst:164
msgid ""
"For this tutorial we will put the library into a subdirectory called "
"``MathFunctions``. This directory already contains a header file, "
"``MathFunctions.h``, and a source file ``mysqrt.cxx``. The source file "
"has one function called ``mysqrt`` that provides similar functionality to"
" the compiler's ``sqrt`` function."
msgstr "Per questo tutorial inseriremo la libreria in una sottodirectory chiamata ``MathFunctions``. Questa directory contiene già un file di header, ``MathFunctions.h``, e un file sorgente ``mysqrt.cxx``. Il file sorgente ha una funzione chiamata ``mysqrt`` che fornisce funzionalità simili alla funzione ``sqrt`` del compilatore."

#: ../../source/cmake/Help/guide/tutorial/index.rst:170
msgid ""
"Add the following one line ``CMakeLists.txt`` file to the "
"``MathFunctions`` directory:"
msgstr "Si aggiunge il seguente file ``CMakeLists.txt`` alla directory ``MathFunctions``:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:176
msgid ""
"To make use of the new library we will add an :command:`add_subdirectory`"
" call in the top-level ``CMakeLists.txt`` file so that the library will "
"get built. We add the new library to the executable, and add "
"``MathFunctions`` as an include directory so that the ``mysqrt.h`` header"
" file can be found. The last few lines of the top-level "
"``CMakeLists.txt`` file should now look like:"
msgstr "Per utilizzare la nuova libreria aggiungeremo una chiamata :command:`add_subdirectory` nel file di livello superiore ``CMakeLists.txt`` in modo che la libreria venga creata. Aggiungiamo la nuova libreria all'eseguibile e aggiungiamo ``MathFunctions`` come directory di inclusione in modo che sia raggiungibile il file header ``mysqrt.h``. Le ultime righe del file di livello superiore ``CMakeLists.txt`` dovrebbero ora assomigliare a:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:199
msgid ""
"Now let us make the MathFunctions library optional. While for the "
"tutorial there really isn't any need to do so, for larger projects this "
"is a common occurrence. The first step is to add an option to the top-"
"level ``CMakeLists.txt`` file."
msgstr "Rendiamo ora facoltativa la libreria MathFunctions. Mentre per il tutorial non ce n'è realmente bisogno, per progetti più grandi questo è un evento comune. Il primo passo consiste nell'aggiungere un'opzione al file ``CMakeLists.txt`` di livello superiore."

#: ../../source/cmake/Help/guide/tutorial/index.rst:209
msgid ""
"This option will be displayed in the :manual:`cmake-gui <cmake-gui(1)>` "
"and :manual:`ccmake <ccmake(1)>` with a default value of ON that can be "
"changed by the user. This setting will be stored in the cache so that the"
" user does not need to set the value each time they run CMake on a build "
"directory."
msgstr "Questa opzione verrà visualizzata in :manual:`cmake-gui <cmake-gui(1)>` e :manual:`ccmake <ccmake(1)>` con un valore predefinito di ON modificabile dall'utente. Questa impostazione verrà archiviata nella cache in modo che l'utente non debba impostare il valore ogni volta che esegue CMake su una directory di build."

#: ../../source/cmake/Help/guide/tutorial/index.rst:215
msgid ""
"The next change is to make building and linking the MathFunctions library"
" conditional. To do this we change the end of the top-level "
"``CMakeLists.txt`` file to look like the following:"
msgstr "La modifica successiva consiste nel rendere condizionale la creazione e il link della libreria MathFunctions. Per fare ciò modifichiamo la fine del file di livello superiore ``CMakeLists.txt`` in modo che assomigli al seguente:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:223
msgid ""
"Note the use of the variable ``EXTRA_LIBS`` to collect up any optional "
"libraries to later be linked into the executable. The variable "
"``EXTRA_INCLUDES`` is used similarly for optional header files. This is a"
" classic approach when dealing with many optional components, we will "
"cover the modern approach in the next step."
msgstr "Da notare l'uso della variabile ``EXTRA_LIBS`` per raccogliere eventuali librerie opzionali da linkare successivamente all'eseguibile. La variabile ``EXTRA_INCLUDES`` viene utilizzata in modo simile per i file header opzionali. Questo è un approccio classico quando si ha a che fare con molti componenti opzionali, tratteremo l'approccio moderno nel prossimo step."

#: ../../source/cmake/Help/guide/tutorial/index.rst:229
msgid ""
"The corresponding changes to the source code are fairly straightforward. "
"First, in ``tutorial.cxx``, include the ``MathFunctions.h`` header if we "
"need it:"
msgstr "Le modifiche corrispondenti al codice sorgente sono abbastanza semplici. Per prima cosa, in ``tutorial.cxx``, si include l'header ``MathFunctions.h`` se ne abbiamo bisogno:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:238
msgid ""
"Then, in the same file, make ``USE_MYMATH`` control which square root "
"function is used:"
msgstr "Quindi, nello stesso file, si fa in modo che ``USE_MYMATH`` controlli quale funzione di radice quadrata utilizzare:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:246
msgid ""
"Since the source code now requires ``USE_MYMATH`` we can add it to "
"``TutorialConfig.h.in`` with the following line:"
msgstr "Dato che il codice sorgente ora richiede ``USE_MYMATH`` possiamo aggiungerlo a ``TutorialConfig.h.in`` con la seguente riga:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:253
msgid ""
"**Exercise**: Why is it important that we configure "
"``TutorialConfig.h.in`` after the option for ``USE_MYMATH``? What would "
"happen if we inverted the two?"
msgstr "**Esercizio**: Perché è importante configurare ``TutorialConfig.h.in`` dopo l'opzione per ``USE_MYMATH``? Cosa accadrebbe se invertissimo le due cose?"

#: ../../source/cmake/Help/guide/tutorial/index.rst:256
msgid ""
"Run the :manual:`cmake  <cmake(1)>` executable or the :manual:`cmake-gui "
"<cmake-gui(1)>` to configure the project and then build it with your "
"chosen build tool. Then run the built Tutorial executable."
msgstr "Eseguire l'eseguibile :manual:`cmake  <cmake(1)>` o :manual:`cmake-gui <cmake-gui(1)>` per configurare il progetto e quindi crearlo con lo strumento di build scelto. Eseguire poi  il Tutorial buildato."

#: ../../source/cmake/Help/guide/tutorial/index.rst:260
msgid ""
"Now let's update the value of ``USE_MYMATH``. The easiest way is to use "
"the :manual:`cmake-gui <cmake-gui(1)>` or  :manual:`ccmake <ccmake(1)>` "
"if you're in the terminal. Or, alternatively, if you want to change the "
"option from the command-line, try:"
msgstr "Ora aggiorniamo il valore di ``USE_MYMATH``. Il modo più semplice è usare :manual:`cmake-gui <cmake-gui(1)>` o  :manual:`ccmake <ccmake(1)>` se si sta nel terminale. Oppure, in alternativa, per modificare l'opzione da riga di comando, provare:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:269
msgid "Rebuild and run the tutorial again."
msgstr "Re-buildare ed eseguire nuovamente il tutorial."

#: ../../source/cmake/Help/guide/tutorial/index.rst:271
msgid "Which function gives better results, sqrt or mysqrt?"
msgstr "Quale funzione dà risultati migliori, sqrt o mysqrt?"

#: ../../source/cmake/Help/guide/tutorial/index.rst:274
msgid "Adding Usage Requirements for Library (Step 3)"
msgstr "Aggiunta dei Requisiti di Utilizzo per la Libreria (Step 3)"

#: ../../source/cmake/Help/guide/tutorial/index.rst:276
msgid ""
"Usage requirements allow for far better control over a library or "
"executable's link and include line while also giving more control over "
"the transitive property of targets inside CMake. The primary commands "
"that leverage usage requirements are:"
msgstr "I requisiti di utilizzo consentono un controllo molto migliore sul link di una libreria o di un eseguibile e sulla riga di include, fornendo allo stesso tempo un maggiore controllo sulla proprietà transitiva dei target all'interno di CMake. I comandi principali che sfruttano i requisiti di utilizzo sono:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:281
msgid ":command:`target_compile_definitions`"
msgstr ":command:`target_compile_definitions`"

#: ../../source/cmake/Help/guide/tutorial/index.rst:282
msgid ":command:`target_compile_options`"
msgstr ":command:`target_compile_options`"

#: ../../source/cmake/Help/guide/tutorial/index.rst:283
msgid ":command:`target_include_directories`"
msgstr ":command:`target_include_directories`"

#: ../../source/cmake/Help/guide/tutorial/index.rst:284
msgid ":command:`target_link_libraries`"
msgstr ":command:`target_link_libraries`"

#: ../../source/cmake/Help/guide/tutorial/index.rst:286
msgid ""
"Let's refactor our code from `Adding a Library (Step 2)`_ to use the "
"modern CMake approach of usage requirements. We first state that anybody "
"linking to MathFunctions needs to include the current source directory, "
"while MathFunctions itself doesn't. So this can become an ``INTERFACE`` "
"usage requirement."
msgstr "Effettuiamo il refactoring del codice da `Aggiunta di una libreria (Step 2)`_ per utilizzare il moderno approccio CMake dei requisiti di utilizzo. Per prima cosa affermiamo che chiunque effettui il link a MathFunctions deve includere la directory corrente dei sorgenti, mentre lo stesso MathFunctions non lo fa. Quindi questo può diventare un requisito di utilizzo dell'``INTERFACCIA``."

#: ../../source/cmake/Help/guide/tutorial/index.rst:292
msgid ""
"Remember ``INTERFACE`` means things that consumers require but the "
"producer doesn't. Add the following lines to the end of "
"``MathFunctions/CMakeLists.txt``:"
msgstr "§Da ricordare che ``INTERFACCIA`` significa cose che i \"consumer\" richiedono ma il produttore no. Aggiungere le seguenti righe alla fine di ``MathFunctions/CMakeLists.txt``:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:300
msgid ""
"Now that we've specified usage requirements for MathFunctions we can "
"safely remove our uses of the ``EXTRA_INCLUDES`` variable from the top-"
"level ``CMakeLists.txt``, here:"
msgstr "Ora che abbiamo specificato i requisiti di utilizzo per MathFunctions possiamo rimuovere in sicurezza gli usi della variabile ``EXTRA_INCLUDES`` dal ``CMakeLists.txt`` del livello superiore, qui:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:309
msgid "And here:"
msgstr "E qui:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:315
msgid ""
"Once this is done, run the :manual:`cmake  <cmake(1)>` executable or the "
":manual:`cmake-gui <cmake-gui(1)>` to configure the project and then "
"build it with your chosen build tool or by using ``cmake --build .`` from"
" the build directory."
msgstr "Fatto ciò, eseguire :manual:`cmake  <cmake(1)>` o :manual:`cmake-gui <cmake-gui(1)>` per configurare il progetto e quindi crearlo con la build scelta o utilizzando ``cmake --build .`` dalla directory build."

#: ../../source/cmake/Help/guide/tutorial/index.rst:321
msgid "Installing and Testing (Step 4)"
msgstr "Installazione e Test (Step 4)"

#: ../../source/cmake/Help/guide/tutorial/index.rst:323
msgid "Now we can start adding install rules and testing support to our project."
msgstr "Ora possiamo iniziare ad aggiungere regole di installazione e testare il supporto al progetto."

#: ../../source/cmake/Help/guide/tutorial/index.rst:326
msgid "Install Rules"
msgstr "Regole di Installazione"

#: ../../source/cmake/Help/guide/tutorial/index.rst:328
msgid ""
"The install rules are fairly simple: for MathFunctions we want to install"
" the library and header file and for the application we want to install "
"the executable and configured header."
msgstr "Le regole di installazione sono abbastanza semplici: per MathFunctions vogliamo installare la libreria e il file header e per l'applicazione vogliamo installare l'eader eseguibile e configurato."

#: ../../source/cmake/Help/guide/tutorial/index.rst:332
msgid "So to the end of ``MathFunctions/CMakeLists.txt`` we add:"
msgstr "Quindi alla fine di ``MathFunctions/CMakeLists.txt`` aggiungiamo:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:338
msgid "And to the end of the top-level ``CMakeLists.txt`` we add:"
msgstr "E alla fine del ``CMakeLists.txt`` di livello superiore aggiungiamo:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:345
msgid ""
"That is all that is needed to create a basic local install of the "
"tutorial."
msgstr "Questo è tutto ciò che serve per creare un'installazione locale di base del tutorial."

#: ../../source/cmake/Help/guide/tutorial/index.rst:347
msgid ""
"Now run the :manual:`cmake  <cmake(1)>` executable or the :manual:`cmake-"
"gui <cmake-gui(1)>` to configure the project and then build it with your "
"chosen build tool."
msgstr "Ora eseguire :manual:`cmake  <cmake(1)>` o :manual:`cmake-gui <cmake-gui(1)>` per configurare il progetto e quindi crearlo col tool di build scelto."

#: ../../source/cmake/Help/guide/tutorial/index.rst:351
msgid ""
"Then run the install step by using the ``install`` option of the "
":manual:`cmake  <cmake(1)>` command (introduced in 3.15, older versions "
"of CMake must use ``make install``) from the command line. For multi-"
"configuration tools, don't forget to use the ``--config`` argument to "
"specify the configuration. If using an IDE, simply build the ``INSTALL`` "
"target. This step will install the appropriate header files, libraries, "
"and executables. For example:"
msgstr "Quindi esegui lo step di installazione utilizzando l'opzione ``install`` del comando :manual:`cmake  <cmake(1)>` (introdotto nella versione 3.15, le versioni precedenti di CMake devono utilizzare ``make install``) dalla riga di comando. Per gli strumenti multi-configurazione, non dimenticare di utilizzare l'argomento ``--config`` per specificare la configurazione. Se si utilizza un IDE, creare semplicemente il target ``INSTALL``. Questo passaggio installerà i file header, le librerie e gli eseguibili appropriati. Per esempio:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:363
msgid ""
"The CMake variable :variable:`CMAKE_INSTALL_PREFIX` is used to determine "
"the root of where the files will be installed. If using the ``cmake "
"--install`` command, the installation prefix can be overridden via the "
"``--prefix`` argument. For example:"
msgstr "La variabile CMake :variable:`CMAKE_INSTALL_PREFIX` viene utilizzata per determinare la root in cui verranno installati i file. Se si usa il comando ``cmake --install``, il prefisso di installazione può essere sovrascritto tramite l'argomento ``--prefix``. Per esempio:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:372
msgid ""
"Navigate to the install directory and verify that the installed Tutorial "
"runs."
msgstr "Passare alla directory di installazione e verificare che il Tutorial installato venga eseguito."

#: ../../source/cmake/Help/guide/tutorial/index.rst:375
msgid "Testing Support"
msgstr "Supporto per i Test"

#: ../../source/cmake/Help/guide/tutorial/index.rst:377
msgid ""
"Next let's test our application. At the end of the top-level "
"``CMakeLists.txt`` file we can enable testing and then add a number of "
"basic tests to verify that the application is working correctly."
msgstr "Successivamente testiamo l'applicazione. Alla fine del file ``CMakeLists.txt`` di livello superiore possiamo abilitare il test e quindi aggiungere una serie di test di base per verificare che l'applicazione funzioni correttamente."

#: ../../source/cmake/Help/guide/tutorial/index.rst:385
msgid ""
"The first test simply verifies that the application runs, does not "
"segfault or otherwise crash, and has a zero return value. This is the "
"basic form of a CTest test."
msgstr "Il primo test verifica semplicemente che l'applicazione venga eseguita, non subisca segfault o si blocchi in altro modo e abbia un valore di ritorno pari a zero. Questa è la forma base di un test CTest."

#: ../../source/cmake/Help/guide/tutorial/index.rst:389
msgid ""
"The next test makes use of the :prop_test:`PASS_REGULAR_EXPRESSION` test "
"property to verify that the output of the test contains certain strings. "
"In this case, verifying that the usage message is printed when an "
"incorrect number of arguments are provided."
msgstr "Il test successivo utilizza la proprietà di test :prop_test:`PASS_REGULAR_EXPRESSION` per verificare che l'output del test contenga determinate stringhe. In questo caso, verificare che il messaggio di utilizzo venga stampato quando viene fornito un numero errato di argomenti."

#: ../../source/cmake/Help/guide/tutorial/index.rst:394
msgid ""
"Lastly, we have a function called ``do_test`` that runs the application "
"and verifies that the computed square root is correct for given input. "
"For each invocation of ``do_test``, another test is added to the project "
"with a name, input, and expected results based on the passed arguments."
msgstr "Infine, abbiamo una funzione chiamata ``do_test`` che esegue l'applicazione e verifica che la radice quadrata calcolata sia corretta per un dato input. Per ogni invocazione di ``do_test``, un altro test viene aggiunto al progetto con un nome, input e risultati attesi in base agli argomenti passati."

#: ../../source/cmake/Help/guide/tutorial/index.rst:399
msgid ""
"Rebuild the application and then cd to the binary directory and run the "
":manual:`ctest <ctest(1)>` executable: ``ctest -N`` and ``ctest -VV``. "
"For multi-config generators (e.g. Visual Studio), the configuration type "
"must be specified. To run tests in Debug mode, for example, use ``ctest "
"-C Debug -VV`` from the build directory (not the Debug subdirectory!). "
"Alternatively, build the ``RUN_TESTS`` target from the IDE."
msgstr "Ri-eseguire la build dell'applicazione e passare alla directory binaria e lanciare l'eseguibile di :manual:`ctest <ctest(1)>`: ``ctest -N`` e ``ctest -VV``. Per i generatori multi-config (ad esempio Visual Studio), è necessario specificare il tipo di configurazione. Per eseguire test in modalità Debug, ad esempio, utilizzare ``ctest -C Debug -VV`` dalla directory build (non dalla sottodirectory Debug!). In alternativa, creare il target ``RUN_TESTS`` dall'IDE."

#: ../../source/cmake/Help/guide/tutorial/index.rst:407
msgid "Adding System Introspection (Step 5)"
msgstr "Aggiungere l'Introspezione del Sistema (Step 5)"

#: ../../source/cmake/Help/guide/tutorial/index.rst:409
msgid ""
"Let us consider adding some code to our project that depends on features "
"the target platform may not have. For this example, we will add some code"
" that depends on whether or not the target platform has the ``log`` and "
"``exp`` functions. Of course almost every platform has these functions "
"but for this tutorial assume that they are not common."
msgstr "Consideriamo di aggiungere del codice al progetto che dipende dalle funzionalità che la piattaforma target potrebbe non avere. Per questo esempio, aggiungeremo del codice che dipende dal fatto che la piattaforma target abbia o meno le funzioni ``log`` e ``exp``. Naturalmente quasi tutte le piattaforme hanno queste funzioni, ma per questo tutorial supponiamo che non siano comuni."

#: ../../source/cmake/Help/guide/tutorial/index.rst:415
msgid ""
"If the platform has ``log`` and ``exp`` then we will use them to compute "
"the square root in the ``mysqrt`` function. We first test for the "
"availability of these functions using the :module:`CheckSymbolExists` "
"module in ``MathFunctions/CMakeLists.txt``. On some platforms, we will "
"need to link to the m library. If ``log`` and ``exp`` are not initially "
"found, require the m library and try again."
msgstr "Se la piattaforma ha ``log`` e ``exp`` li useremo per calcolare la radice quadrata nella funzione ``mysqrt``. Per prima cosa testiamo la disponibilità di queste funzioni utilizzando il modulo :module:`CheckSymbolExists` in ``MathFunctions/CMakeLists.txt``. Su alcune piattaforme dovremo linkare la libreria m. Se inizialmente non vengono trovati ``log`` e ``exp``, richiede la libreria m e riprova."

#: ../../source/cmake/Help/guide/tutorial/index.rst:427
msgid ""
"If available, use :command:`target_compile_definitions` to specify "
"``HAVE_LOG`` and ``HAVE_EXP`` as ``PRIVATE`` compile definitions."
msgstr "Se disponibile, si usa :command:`target_compile_definitions` per specificare ``HAVE_LOG`` and ``HAVE_EXP`` come definizioni di compilazione ``PRIVATE``."

#: ../../source/cmake/Help/guide/tutorial/index.rst:435
msgid ""
"If ``log`` and ``exp`` are available on the system, then we will use them"
" to compute the square root in the ``mysqrt`` function. Add the following"
" code to the ``mysqrt`` function in ``MathFunctions/mysqrt.cxx`` (don't "
"forget the ``#endif`` before returning the result!):"
msgstr "Se nel sistema sono disponibili ``log`` e ``exp``, li utilizzeremo per calcolare la radice quadrata nella funzione ``mysqrt``. Si aggiunge il seguente codice alla funzione ``mysqrt`` in ``MathFunctions/mysqrt.cxx`` (da non dimenticare ``#endif`` prima di restituire il risultato!):"

#: ../../source/cmake/Help/guide/tutorial/index.rst:445
msgid "We will also need to modify ``mysqrt.cxx`` to include ``cmath``."
msgstr "Dovremo anche modificare ``mysqrt.cxx`` per includere ``cmath``."

#: ../../source/cmake/Help/guide/tutorial/index.rst:451
msgid ""
"Run the :manual:`cmake  <cmake(1)>` executable or the :manual:`cmake-gui "
"<cmake-gui(1)>` to configure the project and then build it with your "
"chosen build tool and run the Tutorial executable."
msgstr "Lanciare l'eseguibile :manual:`cmake  <cmake(1)>` o :manual:`cmake-gui <cmake-gui(1)>` per configurare il progetto, poi lo si crea col strumento di creazione stool di build e si esegue il tutorial."

#: ../../source/cmake/Help/guide/tutorial/index.rst:455
msgid "Which function gives better results now, sqrt or mysqrt?"
msgstr "Quale funzione dà risultati migliori ora, sqrt o mysqrt?"

#: ../../source/cmake/Help/guide/tutorial/index.rst:458
msgid "Adding a Custom Command and Generated File (Step 6)"
msgstr "Aggiunta di un Comando Personalizzato e di un File Generato (Step 6)"

#: ../../source/cmake/Help/guide/tutorial/index.rst:460
msgid ""
"Suppose, for the purpose of this tutorial, we decide that we never want "
"to use the platform ``log`` and ``exp`` functions and instead would like "
"to generate a table of precomputed values to use in the ``mysqrt`` "
"function. In this section, we will create the table as part of the build "
"process, and then compile that table into our application."
msgstr "Supponiamo, ai fini di questo tutorial, di decidere di non voler mai utilizzare le funzioni ``log`` e ``exp`` della piattaforma e di voler invece generare una tabella di valori precalcolati da utilizzare in ``mysqrt``. In questa sezione creeremo la tabella come parte del processo di build, poi compileremo la tabella nell'applicazione."

#: ../../source/cmake/Help/guide/tutorial/index.rst:466
msgid ""
"First, let's remove the check for the ``log`` and ``exp`` functions in "
"``MathFunctions/CMakeLists.txt``. Then remove the check for ``HAVE_LOG`` "
"and ``HAVE_EXP`` from ``mysqrt.cxx``. At the same time, we can remove "
":code:`#include <cmath>`."
msgstr "Innanzitutto, rimuoviamo il controllo per le funzioni ``log`` e ``exp`` in ``MathFunctions/CMakeLists.txt``. Quindi si rimuove il controllo per ``HAVE_LOG`` e ``HAVE_EXP`` da ``mysqrt.cxx``. Allo stesso tempo, possiamo rimuovere :code:`#include <cmath>`."

#: ../../source/cmake/Help/guide/tutorial/index.rst:471
msgid ""
"In the ``MathFunctions`` subdirectory, a new source file named "
"``MakeTable.cxx`` has been provided to generate the table."
msgstr "Nella sottodirectory ``MathFunctions`` è stato fornito un nuovo file sorgente denominato ``MakeTable.cxx`` per generare la tabella."

#: ../../source/cmake/Help/guide/tutorial/index.rst:474
msgid ""
"After reviewing the file, we can see that the table is produced as valid "
"C++ code and that the output filename is passed in as an argument."
msgstr "Dall'esame del file, si vede che la tabella viene prodotta come codice C++ valido e che il nome del file di output viene passato come argomento."

#: ../../source/cmake/Help/guide/tutorial/index.rst:477
msgid ""
"The next step is to add the appropriate commands to the "
"``MathFunctions/CMakeLists.txt`` file to build the MakeTable executable "
"and then run it as part of the build process. A few commands are needed "
"to accomplish this."
msgstr "Il passo successivo è quello di aggiungere i comandi appropriati al file ``MathFunctions/CMakeLists.txt`` per creare l'eseguibile MakeTable per poi eseguirlo come parte del processo di build. Per eseguire questa operazione sono necessari alcuni comandi."

#: ../../source/cmake/Help/guide/tutorial/index.rst:482
msgid ""
"First, at the top of ``MathFunctions/CMakeLists.txt``, the executable for"
" ``MakeTable`` is added as any other executable would be added."
msgstr "Innanzitutto, nella parte superiore di ``MathFunctions/CMakeLists.txt``, viene aggiunto l'eseguibile per ``MakeTable`` così come verrebbe aggiunto qualsiasi altro eseguibile."

#: ../../source/cmake/Help/guide/tutorial/index.rst:490
msgid ""
"Then we add a custom command that specifies how to produce ``Table.h`` by"
" running MakeTable."
msgstr "Quindi aggiungiamo un comando personalizzato che specifica come produrre ``Table.h`` eseguendo MakeTable."

#: ../../source/cmake/Help/guide/tutorial/index.rst:498
msgid ""
"Next we have to let CMake know that ``mysqrt.cxx`` depends on the "
"generated file ``Table.h``. This is done by adding the generated "
"``Table.h`` to the list of sources for the library MathFunctions."
msgstr "Successivamente dobbiamo far sapere a CMake che ``mysqrt.cxx`` dipende dal file generato ``Table.h``. Questo viene fatto aggiungendo il file ``Table.h`` generato all'elenco dei sorgenti per la libreria MathFunctions."

#: ../../source/cmake/Help/guide/tutorial/index.rst:507
msgid ""
"We also have to add the current binary directory to the list of include "
"directories so that ``Table.h`` can be found and included by "
"``mysqrt.cxx``."
msgstr "Dobbiamo anche aggiungere la directory binaria corrente all'elenco delle directory di inclusione in modo che ``Table.h`` sia raggiungibile da ``mysqrt.cxx``."

#: ../../source/cmake/Help/guide/tutorial/index.rst:515
msgid ""
"Now let's use the generated table. First, modify ``mysqrt.cxx`` to "
"include ``Table.h``. Next, we can rewrite the mysqrt function to use the "
"table:"
msgstr "Ora utilizziamo la tabella generata. Innanzitutto, si modifica ``mysqrt.cxx`` per includere ``Table.h``. Successivamente, possiamo riscrivere la funzione mysqrt per utilizzare la tabella:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:522
msgid ""
"Run the :manual:`cmake  <cmake(1)>` executable or the :manual:`cmake-gui "
"<cmake-gui(1)>` to configure the project and then build it with your "
"chosen build tool."
msgstr "Eseguire l'eseguibile :manual:`cmake  <cmake(1)>` o :manual:`cmake-gui <cmake-gui(1)>` per configurare il progetto e quindi crearlo con lo strumento di build scelto."

#: ../../source/cmake/Help/guide/tutorial/index.rst:526
msgid ""
"When this project is built it will first build the ``MakeTable`` "
"executable. It will then run ``MakeTable`` to produce ``Table.h``. "
"Finally, it will compile ``mysqrt.cxx`` which includes ``Table.h`` to "
"produce the MathFunctions library."
msgstr "Con la build di questo progetto, verrà prima creato l'eseguibile ``MakeTable``. Verrà poi eseguito ``MakeTable`` per produrre ``Table.h``. Infine, si compilerà ``mysqrt.cxx`` che include ``Table.h`` per produrre la libreria MathFunctions."

#: ../../source/cmake/Help/guide/tutorial/index.rst:531
msgid "Run the Tutorial executable and verify that it is using the table."
msgstr "Lanciare l'eseguibile del tutorial e verificare che utilizzi la tabella."

#: ../../source/cmake/Help/guide/tutorial/index.rst:534
msgid "Building an Installer (Step 7)"
msgstr "Creazione di un Programma di Installazione (Step 7)"

#: ../../source/cmake/Help/guide/tutorial/index.rst:536
msgid ""
"Next suppose that we want to distribute our project to other people so "
"that they can use it. We want to provide both binary and source "
"distributions on a variety of platforms. This is a little different from "
"the install we did previously in `Installing and Testing (Step 4)`_ , "
"where we were installing the binaries that we had built from the source "
"code. In this example we will be building installation packages that "
"support binary installations and package management features. To "
"accomplish this we will use CPack to create platform specific installers."
" Specifically we need to add a few lines to the bottom of our top-level "
"``CMakeLists.txt`` file."
msgstr "Supponiamo ora di voler distribuire il nostro progetto ad altre persone in modo che possano usarlo. Vogliamo fornire distribuzioni sia binarie che sorgenti su una varietà di piattaforme. Questo è un po' diverso dall'installazione fatta in precedenza in `Installazione e Test (Step 4)`_ , dove stavamo installando i binari creati dal codice sorgente. In questo esempio creeremo pacchetti di installazione che supportano installazioni binarie e funzionalità di gestione dei pacchetti. Per raggiungere questo obiettivo utilizzeremo CPack per creare programmi di installazione specifici della piattaforma. Nello specifico dobbiamo aggiungere alcune righe alla fine del nostro file ``CMakeLists.txt`` di livello superiore."

#: ../../source/cmake/Help/guide/tutorial/index.rst:550
msgid ""
"That is all there is to it. We start by including "
":module:`InstallRequiredSystemLibraries`. This module will include any "
"runtime libraries that are needed by the project for the current "
"platform. Next we set some CPack variables to where we have stored the "
"license and version information for this project. The version information"
" was set earlier in this tutorial and the ``license.txt`` has been "
"included in the top-level source directory for this step."
msgstr "Questo è tutto. Iniziamo includendo :module:`InstallRequiredSystemLibraries`. Questo modulo includerà tutte le librerie runtime necessarie al progetto per la piattaforma corrente. Successivamente impostiamo alcune variabili CPack in cui abbiamo archiviato le informazioni sulla licenza e sulla versione per questo progetto. Le informazioni sulla versione sono state impostate in precedenza in questo tutorial e il file ``license.txt`` è stato incluso nella directory dei sorgenti di livello superiore per questo step."

#: ../../source/cmake/Help/guide/tutorial/index.rst:558
msgid ""
"Finally we include the :module:`CPack module <CPack>` which will use "
"these variables and some other properties of the current system to setup "
"an installer."
msgstr "Infine includiamo :module:`CPack module <CPack>` che utilizzerà queste variabili e alcune altre proprietà del sistema corrente per impostare un programma di installazione."

#: ../../source/cmake/Help/guide/tutorial/index.rst:562
msgid ""
"The next step is to build the project in the usual manner and then run "
"the :manual:`cpack <cpack(1)>` executable. To build a binary "
"distribution, from the binary directory run:"
msgstr "Il passo successivo è creare il progetto nel solito modo e poi lanciare l'eseguibile :manual:`cpack <cpack(1)>`. Per creare una distribuzione binaria, dalla directory binaria eseguire:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:570
msgid ""
"To specify the generator, use the ``-G`` option. For multi-config builds,"
" use ``-C`` to specify the configuration. For example:"
msgstr "Per specificare il generatore, utilizzare l'opzione ``-G``. Per build multi-configurazione, utilizzare ``-C`` per specificare la configurazione. Per esempio:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:577
msgid "To create a source distribution you would type:"
msgstr "Per creare una distribuzione sorgente si deve digitare:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:583
msgid ""
"Alternatively, run ``make package`` or right click the ``Package`` target"
" and ``Build Project`` from an IDE."
msgstr "In alternativa, eseguire ``make package`` o click destro sul target ``Package`` e ``Build Project`` dall'IDE."

#: ../../source/cmake/Help/guide/tutorial/index.rst:586
msgid ""
"Run the installer found in the binary directory. Then run the installed "
"executable and verify that it works."
msgstr "Eseguire il programma di installazione trovato nella directory binaria. Lanciare poi l'eseguibile installato e verificare che funzioni."

#: ../../source/cmake/Help/guide/tutorial/index.rst:590
msgid "Adding Support for a Dashboard (Step 8)"
msgstr "Aggiungere il Supporto per una Dashboard (Step 8)"

#: ../../source/cmake/Help/guide/tutorial/index.rst:592
msgid ""
"Adding support for submitting our test results to a dashboard is simple. "
"We already defined a number of tests for our project in `Testing "
"Support`_. Now we just have to run those tests and submit them to a "
"dashboard. To include support for dashboards we include the "
":module:`CTest` module in our top-level ``CMakeLists.txt``."
msgstr "Aggiungere il supporto per inviare i risultati dei nostri test a una dashboard è semplice. Abbiamo già definito una serie di test per il nostro progetto in `Supporto per i Test`_. Ora non ci resta che eseguire questi test e inviarli a una dashboard. Per aggiungere il supporto per la dashboard includiamo il modulo :module:`CTest` nel ``CMakeLists.txt`` di livello superiore."

#: ../../source/cmake/Help/guide/tutorial/index.rst:598
msgid "Replace:"
msgstr "Sostituire:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:605
msgid "With:"
msgstr "Con:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:612
msgid ""
"The :module:`CTest` module will automatically call ``enable_testing()``, "
"so we can remove it from our CMake files."
msgstr "Il modulo :module:`CTest` chiamerà automaticamente ``enable_testing()``, quindi possiamo rimuoverlo dai file CMake."

#: ../../source/cmake/Help/guide/tutorial/index.rst:615
msgid ""
"We will also need to create a ``CTestConfig.cmake`` file in the top-level"
" directory where we can specify the name of the project and where to "
"submit the dashboard."
msgstr "Dovremo anche creare un file ``CTestConfig.cmake`` nella directory di primo livello in cui possiamo specificare il nome del progetto e dove inviare la dashboard."

#: ../../source/cmake/Help/guide/tutorial/index.rst:622
msgid ""
"The :manual:`ctest <ctest(1)>` executable will read in this file when it "
"runs. To create a simple dashboard you can run the :manual:`cmake "
"<cmake(1)>` executable or the :manual:`cmake-gui <cmake-gui(1)>` to "
"configure the project, but do not build it yet. Instead, change directory"
" to the binary tree, and then run:"
msgstr ":manual:`ctest <ctest(1)>` leggerà questo file quando verrà eseguito. Per creare una semplice dashboard si può lanciare l'eseguibile :manual:`cmake <cmake(1)>` o :manual:`cmake-gui <cmake-gui(1)>` per configurare il progetto, ma senza farne la build ancora. Cambiare invece la directory nell'albero binario ed eseguire:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:628
msgid "ctest [-VV] -D Experimental"
msgstr "ctest [-VV] -D Experimental"

#: ../../source/cmake/Help/guide/tutorial/index.rst:630
msgid ""
"Remember, for multi-config generators (e.g. Visual Studio), the "
"configuration type must be specified::"
msgstr "Ricordarsi che per i generatori multi-config (es. Visual Studio), è necessario specificare il tipo di configurazione::"

#: ../../source/cmake/Help/guide/tutorial/index.rst:635
msgid "Or, from an IDE, build the ``Experimental`` target."
msgstr "Oppure, da un IDE, si esegue la build  ``Experimental`` del target."

#: ../../source/cmake/Help/guide/tutorial/index.rst:637
msgid ""
"The :manual:`ctest <ctest(1)>` executable will build and test the project"
" and submit the results to Kitware's public dashboard: "
"https://my.cdash.org/index.php?project=CMakeTutorial."
msgstr "L'eseguibile :manual:`ctest <ctest(1)>` creerà e testerà il progetto e invierà i risultati alla dashboard pubblica di Kitware: https://my.cdash.org/index.php?project=CMakeTutorial."

#: ../../source/cmake/Help/guide/tutorial/index.rst:642
msgid "Mixing Static and Shared (Step 9)"
msgstr "Mix di Static e Shared (Step 9)"

#: ../../source/cmake/Help/guide/tutorial/index.rst:644
msgid ""
"In this section we will show how the :variable:`BUILD_SHARED_LIBS` "
"variable can be used to control the default behavior of "
":command:`add_library`, and allow control over how libraries without an "
"explicit type (``STATIC``, ``SHARED``, ``MODULE`` or ``OBJECT``) are "
"built."
msgstr "In questa sezione mostreremo come la variabile :variable:`BUILD_SHARED_LIBS` è utilizzabile per controllare il comportamento di default di :command:`add_library` e consentire il controllo su come le librerie senza un tipo esplicito (``STATIC``, ``SHARED``, ``MODULE`` o ``OBJECT``) vengono costruite."

#: ../../source/cmake/Help/guide/tutorial/index.rst:649
msgid ""
"To accomplish this we need to add :variable:`BUILD_SHARED_LIBS` to the "
"top-level ``CMakeLists.txt``. We use the :command:`option` command as it "
"allows users to optionally select if the value should be ON or OFF."
msgstr "Per ottenere ciò dobbiamo aggiungere :variable:`BUILD_SHARED_LIBS` al ``CMakeLists.txt`` di livello superiore. Usiamo il comando :command:`option` poiché consente agli utenti di selezionare facoltativamente se il valore deve essere ON o OFF."

#: ../../source/cmake/Help/guide/tutorial/index.rst:653
msgid ""
"Next we are going to refactor MathFunctions to become a real library that"
" encapsulates using ``mysqrt`` or ``sqrt``, instead of requiring the "
"calling code to do this logic. This will also mean that ``USE_MYMATH`` "
"will not control building MathFunctions, but instead will control the "
"behavior of this library."
msgstr "Successivamente effettueremo il refactoring di MathFunctions per farla diventare una vera libreria che incapsuli l'utilizzo di ``mysqrt`` o ``sqrt``, invece di richiedere al codice chiamante di eseguire questa logica. Ciò significherà anche che ``USE_MYMATH`` non controllerà la build di MathFunctions, ma controllerà invece il comportamento di questa libreria."

#: ../../source/cmake/Help/guide/tutorial/index.rst:658
msgid ""
"The first step is to update the starting section of the top-level "
"``CMakeLists.txt`` to look like:"
msgstr "Il primo passo è aggiornare la sezione iniziale del file ``CMakeLists.txt`` di livello superiore in modo che assomigli a:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:665
msgid ""
"Now that we have made MathFunctions always be used, we will need to "
"update the logic of that library. So, in ``MathFunctions/CMakeLists.txt``"
" we need to create a SqrtLibrary that will conditionally be built and "
"installed when ``USE_MYMATH`` is enabled. Now, since this is a tutorial, "
"we are going to explicitly require that SqrtLibrary is built statically."
msgstr "Ora che abbiamo fatto in modo che MathFunctions venga sempre utilizzata, ne dovremo aggiornare la logica. Quindi, in ``MathFunctions/CMakeLists.txt`` dobbiamo creare una SqrtLibrary che verrà creata e installata in modo condizionale quando ``USE_MYMATH`` è abilitato. Ora, poiché questo è un tutorial, richiederemo esplicitamente che SqrtLibrary venga creata staticamente."

#: ../../source/cmake/Help/guide/tutorial/index.rst:671
msgid "The end result is that ``MathFunctions/CMakeLists.txt`` should look like:"
msgstr "Il risultato finale è che ``MathFunctions/CMakeLists.txt`` dovrebbe assomigliare a:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:677
msgid ""
"Next, update ``MathFunctions/mysqrt.cxx`` to use the ``mathfunctions`` "
"and ``detail`` namespaces:"
msgstr "Successivamente, si aggiorna ``MathFunctions/mysqrt.cxx`` per utilizzare i namespace ``mathfunctions`` e ``detail``:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:683
msgid ""
"We also need to make some changes in ``tutorial.cxx``, so that it no "
"longer uses ``USE_MYMATH``:"
msgstr "Dobbiamo anche apportare alcune modifiche a ``tutorial.cxx``, in modo che non utilizzi più ``USE_MYMATH``:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:686
msgid "Always include ``MathFunctions.h``"
msgstr "Include sempre ``MathFunctions.h``"

#: ../../source/cmake/Help/guide/tutorial/index.rst:687
msgid "Always use ``mathfunctions::sqrt``"
msgstr "Utilizza sempre ``mathfunctions::sqrt``"

#: ../../source/cmake/Help/guide/tutorial/index.rst:688
msgid "Don't include cmath"
msgstr "Non include cmath"

#: ../../source/cmake/Help/guide/tutorial/index.rst:690
msgid ""
"Finally, update ``MathFunctions/MathFunctions.h`` to use dll export "
"defines:"
msgstr "Infine, si aggiorn ``MathFunctions/MathFunctions.h`` per utilizzare le definizioni di esportazione delle dll:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:695
msgid ""
"At this point, if you build everything, you may notice that linking fails"
" as we are combining a static library without position independent code "
"with a library that has position independent code. The solution to this "
"is to explicitly set the :prop_tgt:`POSITION_INDEPENDENT_CODE` target "
"property of SqrtLibrary to be True no matter the build type."
msgstr "A questo punto, buildando il tutto, si noterà che il link fallisce poiché stiamo combinando una libreria statica senza codice indipendente dalla posizione con una libreria che ha codice indipendente dalla posizione. La soluzione a questo problema è impostare esplicitamente la proprietà del target :prop_tgt:`POSITION_INDEPENDENT_CODE` di SqrtLibrary su True, indipendentemente dal tipo di build."

#: ../../source/cmake/Help/guide/tutorial/index.rst:705
msgid ""
"**Exercise**: We modified ``MathFunctions.h`` to use dll export defines. "
"Using CMake documentation can you find a helper module to simplify this?"
msgstr "**Esercizio**: Abbiamo modificato ``MathFunctions.h`` per utilizzare le definizioni di esportazione delle dll. Utilizzando la documentazione di CMake si può trovare un modulo di supporto per semplificarlo?"

#: ../../source/cmake/Help/guide/tutorial/index.rst:710
msgid "Adding Generator Expressions (Step 10)"
msgstr "Aggiungere di Espressioni del Generatore (Step 10)"

#: ../../source/cmake/Help/guide/tutorial/index.rst:712
msgid ""
":manual:`Generator expressions <cmake-generator-expressions(7)>` are "
"evaluated during build system generation to produce information specific "
"to each build configuration."
msgstr ":manual:`Generator expressions <cmake-generator-expressions(7)>` vengono valutate durante la generazione del sistema di build per produrre informazioni specifiche per ciascuna configurazione di build."

#: ../../source/cmake/Help/guide/tutorial/index.rst:716
msgid ""
":manual:`Generator expressions <cmake-generator-expressions(7)>` are "
"allowed in the context of many target properties, such as "
":prop_tgt:`LINK_LIBRARIES`, :prop_tgt:`INCLUDE_DIRECTORIES`, "
":prop_tgt:`COMPILE_DEFINITIONS` and others. They may also be used when "
"using commands to populate those properties, such as "
":command:`target_link_libraries`, :command:`target_include_directories`, "
":command:`target_compile_definitions` and others."
msgstr ":manual:`Generator expressions <cmake-generator-expressions(7)>` sono consentite nel contesto di molte proprietà di target, come :prop_tgt:`LINK_LIBRARIES`, :prop_tgt:`INCLUDE_DIRECTORIES`, :prop_tgt:`COMPILE_DEFINITIONS` e altre. Sono anche utilizzabili quando si usano comandi per popolare tali proprietà, come :command:`target_link_libraries`, :command:`target_include_directories`, :command:`target_compile_definitions` e altri."

#: ../../source/cmake/Help/guide/tutorial/index.rst:723
msgid ""
":manual:`Generator expressions <cmake-generator-expressions(7)>`  may be "
"used to enable conditional linking, conditional definitions used when "
"compiling, conditional include directories and more. The conditions may "
"be based on the build configuration, target properties, platform "
"information or any other queryable information."
msgstr ":manual:`Generator expressions <cmake-generator-expressions(7)>`  possono essere utilizzate per abilitare il link condizionale, le definizioni condizionali utilizzate durante la compilazione, le directory di inclusione condizionale e altro ancora. Le condizioni possono essere basate sulla configurazione della build, sulle proprietà del target, sulle informazioni della piattaforma o su qualsiasi altra informazione interrogabile."

#: ../../source/cmake/Help/guide/tutorial/index.rst:729
msgid ""
"There are different types of :manual:`generator expressions <cmake-"
"generator-expressions(7)>` including Logical, Informational, and Output "
"expressions."
msgstr "Esistono diversi tipi di :manual:`generator expressions <cmake-generator-expressions(7)>` comprese le espressioni Logiche, Informative e di Output."

#: ../../source/cmake/Help/guide/tutorial/index.rst:733
msgid ""
"Logical expressions are used to create conditional output. The basic "
"expressions are the 0 and 1 expressions. A ``$<0:...>`` results in the "
"empty string, and ``<1:...>`` results in the content of \"...\".  They "
"can also be nested."
msgstr "Le espressioni logiche vengono utilizzate per creare un output condizionale. Le espressioni di base sono le espressioni 0 e 1. ``$<0:...>`` restituisce una stringa vuota e ``<1:...>`` restituisce il contenuto di \"...\".  Possono anche essere annidate."

#: ../../source/cmake/Help/guide/tutorial/index.rst:738
msgid ""
"A common usage of :manual:`generator expressions <cmake-generator-"
"expressions(7)>` is to conditionally add compiler flags, such as those "
"for language levels or warnings. A nice pattern is to associate this "
"information to an ``INTERFACE`` target allowing this information to "
"propagate. Let's start by constructing an ``INTERFACE`` target and "
"specifying the required C++ standard level of ``11`` instead of using "
":variable:`CMAKE_CXX_STANDARD`."
msgstr "Un utilizzo comune delle :manual:`generator expressions <cmake-generator-expressions(7)>` è quello di aggiungere in modo condizionale flag del compilatore, come quelli per i livelli del linguaggio o i warning. Un pattern interessante è quello di associare queste informazioni a un target ``INTERFACE`` che consente a queste informazioni di propagarsi. Iniziamo costruendo un target ``INTERFACE`` e specificando il livello dello standard C++ richiesto di ``11`` invece di utilizzare :variable:`CMAKE_CXX_STANDARD`."

#: ../../source/cmake/Help/guide/tutorial/index.rst:746
msgid "So the following code:"
msgstr "Quindi il seguente codice:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:753
msgid "Would be replaced with:"
msgstr "Verrebbe sostituito con:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:761
msgid ""
"Next we add the desired compiler warning flags that we want for our "
"project. As warning flags vary based on the compiler we use the "
"``COMPILE_LANG_AND_ID`` generator expression to control which flags to "
"apply given a language and a set of compiler ids as seen below:"
msgstr "Successivamente aggiungiamo i flag di warning  del compilatore desiderati che vogliamo per il progetto. Poiché i flag di warning variano in base al compilatore, utilizziamo l'espressione generatrice ``COMPILE_LANG_AND_ID`` per controllare quali flag applicare dato un linguaggio e un set di ID del compilatore come mostrato di seguito:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:771
msgid ""
"Looking at this we see that the warning flags are encapsulated inside a "
"``BUILD_INTERFACE`` condition. This is done so that consumers of our "
"installed project will not inherit our warning flags."
msgstr "Osservando questo vediamo che i flag di warning sono incapsulati all'interno di una condizione ``BUILD_INTERFACE``. Questo viene fatto in modo che i consumer (consumatori) del progetto installato non ereditino i flag di warning."

#: ../../source/cmake/Help/guide/tutorial/index.rst:776
msgid ""
"**Exercise**: Modify ``MathFunctions/CMakeLists.txt`` so that all targets"
" have a :command:`target_link_libraries` call to "
"``tutorial_compiler_flags``."
msgstr "**Esercizio**: Modificare ``MathFunctions/CMakeLists.txt`` in modo che tutti i target abbiano una chiamata :command:`target_link_libraries` a ``tutorial_compiler_flags``."

#: ../../source/cmake/Help/guide/tutorial/index.rst:781
msgid "Adding Export Configuration (Step 11)"
msgstr "Aggiungere la Configurazione di Esportazione (Step 11)"

#: ../../source/cmake/Help/guide/tutorial/index.rst:783
msgid ""
"During `Installing and Testing (Step 4)`_ of the tutorial we added the "
"ability for CMake to install the library and headers of the project. "
"During `Building an Installer (Step 7)`_ we added the ability to package "
"up this information so it could be distributed to other people."
msgstr "In `Installazione e Test (Step 4)`_ del tutorial abbiamo aggiunto la possibilità per CMake di installare la libreria e gli header del progetto. In `Creazione di un Programma di Installazione (Step 7)`_ abbiamo aggiunto la possibilità di impacchettare queste informazioni in modo che possano essere distribuite ad altri."

#: ../../source/cmake/Help/guide/tutorial/index.rst:788
msgid ""
"The next step is to add the necessary information so that other CMake "
"projects can use our project, be it from a build directory, a local "
"install or when packaged."
msgstr "Il passaggio successivo è quello di aggiungere le informazioni necessarie in modo che altri progetti CMake possano utilizzare il nostro progetto, sia da una directory di build, da un'installazione locale o da un pacchetto."

#: ../../source/cmake/Help/guide/tutorial/index.rst:792
msgid ""
"The first step is to update our :command:`install(TARGETS)` commands to "
"not only specify a ``DESTINATION`` but also an ``EXPORT``. The ``EXPORT``"
" keyword generates and installs a CMake file containing code to import "
"all targets listed in the install command from the installation tree. So "
"let's go ahead and explicitly ``EXPORT`` the MathFunctions library by "
"updating the ``install`` command in ``MathFunctions/CMakeLists.txt`` to "
"look like:"
msgstr "Il primo passo è aggiornare i comandi :command:`install(TARGETS)` per specificare non solo una ``DESTINATION`` ma anche una ``EXPORT``. La parola chiave ``EXPORT`` genera e installa un file CMake contenente il codice per importare tutti i target elencati nel comando install dall'albero di installazione. Quindi andiamo avanti con un ``EXPORT`` esplicito della libreria MathFunctions aggiornando il comando ``install`` in ``MathFunctions/CMakeLists.txt`` in modo che assomigli a:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:803
msgid ""
"Now that we have MathFunctions being exported, we also need to explicitly"
" install the generated ``MathFunctionsTargets.cmake`` file. This is done "
"by adding the following to the bottom of the top-level "
"``CMakeLists.txt``:"
msgstr "Ora che abbiamo esportato MathFunctions, dobbiamo anche installare esplicitamente il file ``MathFunctionsTargets.cmake`` generato. Questo viene fatto aggiungendo quanto segue in fondo al file ``CMakeLists.txt`` di livello superiore:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:812
msgid ""
"At this point you should try and run CMake. If everything is setup "
"properly you will see that CMake will generate an error that looks like:"
msgstr "A questo punto dovrebbe provare ad eseguire CMake. Se tutto è configurato correttamente, CMake genererà un errore simile a:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:824
msgid ""
"What CMake is trying to say is that during generating the export "
"information it will export a path that is intrinsically tied to the "
"current machine and will not be valid on other machines. The solution to "
"this is to update the MathFunctions :command:`target_include_directories`"
" to understand that it needs different ``INTERFACE`` locations when being"
" used from within the build directory and from an install / package. This"
" means converting the :command:`target_include_directories` call for "
"MathFunctions to look like:"
msgstr "Ciò che CMake sta cercando di dire è che nella generazione delle informazioni di esportazione ci sarà un percorso che è intrinsecamente legato alla macchina corrente e non sarà valido su altre macchine. La soluzione a questo è aggiornare :command:`target_include_directories` di MathFunctions per comprendere che necessita di posizioni ``INTERFACE`` diverse quando viene utilizzato dalla directory di build e da un pacchetto/installazione. Ciò significa convertire la chiamata :command:`target_include_directories` per MathFunctions in modo che assomigli a:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:837
msgid ""
"Once this has been updated, we can re-run CMake and verify that it "
"doesn't warn anymore."
msgstr "Una volta aggiornato, possiamo eseguire nuovamente CMake e verificare che non emetta più dei warning."

#: ../../source/cmake/Help/guide/tutorial/index.rst:840
msgid ""
"At this point, we have CMake properly packaging the target information "
"that is required but we will still need to generate a "
"``MathFunctionsConfig.cmake`` so that the CMake :command:`find_package` "
"command can find our project. So let's go ahead and add a new file to the"
" top-level of the project called ``Config.cmake.in`` with the following "
"contents:"
msgstr "A questo punto, abbiamo CMake che impacchetta correttamente le informazioni del target richieste, ma dovremo comunque generare un ``MathFunctionsConfig.cmake`` in modo che il comando CMake :command:`find_package` possa trovare il progetto. Andiamo quindi avanti e aggiungiamo un nuovo file al livello più alto del progetto chiamato ``Config.cmake.in`` col seguente contenuto:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:848
msgid ""
"Then, to properly configure and install that file, add the following to "
"the bottom of the top-level ``CMakeLists.txt``:"
msgstr "Quindi, per configurare e installare correttamente il file, si aggiunge quanto segue in fondo al file ``CMakeLists.txt`` di livello superiore:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:856
msgid ""
"At this point, we have generated a relocatable CMake Configuration for "
"our project that can be used after the project has been installed or "
"packaged. If we want our project to also be used from a build directory "
"we only have to add the following to the bottom of the top level "
"``CMakeLists.txt``:"
msgstr "A questo punto, abbiamo generato una configurazione CMake rilocabile per il progetto utilizzabile dopo che il progetto è stato installato o inserito in un pacchetto. Se vogliamo che il progetto venga utilizzato anche da una directory di build dobbiamo solo aggiungere quanto segue in fondo al ``CMakeLists.txt`` del livello superiore:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:865
msgid ""
"With this export call we now generate a ``Targets.cmake``, allowing the "
"configured ``MathFunctionsConfig.cmake`` in the build directory to be "
"used by other projects, without needing it to be installed."
msgstr "Con questa chiamata di esportazione ora generiamo un ``Targets.cmake``, consentendo al ``MathFunctionsConfig.cmake`` configurato nella directory build di essere utilizzato da altri progetti, senza bisogno che sia installato."

#: ../../source/cmake/Help/guide/tutorial/index.rst:870
msgid "Packaging Debug and Release (Step 12)"
msgstr "Packaging di Debug e Release (Step 12)"

#: ../../source/cmake/Help/guide/tutorial/index.rst:872
msgid ""
"**Note:** This example is valid for single-configuration generators and "
"will not work for multi-configuration generators (e.g. Visual Studio)."
msgstr "**Nota:** Questo esempio è valido per generatori a configurazione singola e non funzionerà per generatori a configurazione multipla (ad esempio Visual Studio)."

#: ../../source/cmake/Help/guide/tutorial/index.rst:875
msgid ""
"By default, CMake's model is that a build directory only contains a "
"single configuration, be it Debug, Release, MinSizeRel, or "
"RelWithDebInfo. It is possible, however, to setup CPack to bundle "
"multiple build directories and construct a package that contains multiple"
" configurations of the same project."
msgstr "Per default, il modello di CMake prevede che una directory di build contenga solo una singola configurazione, che si tratti di Debug, Release, MinSizeRel o RelWithDebInfo. È possibile, tuttavia, configurare CPack per raggruppare più directory di build e costruire un pacchetto che contenga più configurazioni dello stesso progetto."

#: ../../source/cmake/Help/guide/tutorial/index.rst:880
msgid ""
"First, we want to ensure that the debug and release builds use different "
"names for the executables and libraries that will be installed. Let's use"
" `d` as the postfix for the debug executable and libraries."
msgstr "Innanzitutto, vogliamo garantire che le build di debug e di release utilizzino nomi diversi per gli eseguibili e le librerie che verranno installate. Usiamo `d` come suffisso per l'eseguibile e le librerie di debug."

#: ../../source/cmake/Help/guide/tutorial/index.rst:884
msgid ""
"Set :variable:`CMAKE_DEBUG_POSTFIX` near the beginning of the top-level "
"``CMakeLists.txt`` file:"
msgstr "Si setta :variable:`CMAKE_DEBUG_POSTFIX` vicino all'inizio del file ``CMakeLists.txt`` di livello superiore:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:892
msgid "And the :prop_tgt:`DEBUG_POSTFIX` property on the tutorial executable:"
msgstr "E la proprietà :prop_tgt:`DEBUG_POSTFIX` sull'eseguibile del tutorial:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:899
msgid ""
"Let's also add version numbering to the MathFunctions library. In "
"``MathFunctions/CMakeLists.txt``, set the :prop_tgt:`VERSION` and "
":prop_tgt:`SOVERSION` properties:"
msgstr "Aggiungiamo anche la numerazione delle versioni alla libreria MathFunctions. In ``MathFunctions/CMakeLists.txt``, si impostano le proprietà :prop_tgt:`VERSION` e :prop_tgt:`SOVERSION`:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:908
msgid ""
"From the ``Step12`` directory, create ``debug`` and ``release`` "
"subbdirectories. The layout will look like:"
msgstr "Dalla directory ``Step12``, creare le sottodirectory ``debug`` e ``release``. Il layout sarà simile a:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:917
msgid ""
"Now we need to setup debug and release builds. We can use "
":variable:`CMAKE_BUILD_TYPE` to set the configuration type:"
msgstr "Ora dobbiamo impostare la build di debug e quella di release. Possiamo usare :variable:`CMAKE_BUILD_TYPE` per impostare il tipo di configurazione:"

#: ../../source/cmake/Help/guide/tutorial/index.rst:929
msgid ""
"Now that both the debug and release builds are complete, we can use a "
"custom configuration file to package both builds into a single release. "
"In the ``Step12`` directory, create a file called "
"``MultiCPackConfig.cmake``. In this file, first include the default "
"configuration file that was created by the :manual:`cmake  <cmake(1)>` "
"executable."
msgstr "Ora che sia la build di debug che quella di release sono complete, possiamo utilizzare un file di configurazione personalizzato per comprimere entrambe le build in un'unica versione. Nella directory ``Step12``, creare un file chiamato ``MultiCPackConfig.cmake``. In questo file, si include innanzitutto il file di configurazione di default creato dall'eseguibile :manual:`cmake  <cmake(1)>`."

#: ../../source/cmake/Help/guide/tutorial/index.rst:935
msgid ""
"Next, use the ``CPACK_INSTALL_CMAKE_PROJECTS`` variable to specify which "
"projects to install. In this case, we want to install both debug and "
"release."
msgstr "Successivamente, si utilizza la variabile ``CPACK_INSTALL_CMAKE_PROJECTS`` per specificare quali progetti installare. In questo caso, vogliamo installare sia debug che release."

#: ../../source/cmake/Help/guide/tutorial/index.rst:941
msgid ""
"From the ``Step12`` directory, run :manual:`cpack <cpack(1)>` specifying "
"our custom configuration file with the ``config`` option:"
msgstr "Dalla directory ``Step12``, si esegue :manual:`cpack <cpack(1)>` specificando il file di configurazione personalizzato con l'opzione ``config``:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:2
msgid "User Interaction Guide"
msgstr "Guida all'Interazione con l'Utente"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:11
msgid ""
"Where a software package supplies a CMake-based buildsystem with the "
"source of their software, the consumer of the software is required to run"
" a CMake user interaction tool in order to build it."
msgstr "Laddove un pacchetto software fornisce un sistema di build basato su CMake col sorgente del software, il consumatore del software è tenuto a eseguire uno strumento di interazione con l'utente CMake per buildare."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:16
msgid ""
"Well-behaved CMake-based buildsystems do not create any output in the "
"source directory, so typically, the user performs an out-of-source build "
"and performs the build there.  First, CMake must be instructed to "
"generate a suitable buildsystem, then the user invokes a build tool to "
"process that generated buildsystem.  The generated buildsystem is "
"specific to the machine used to generate it and is not redistributable.  "
"Each consumer of a provided source software package is required to use "
"CMake to generate a buildsystem specific to their system."
msgstr "I sistemi di build basati su CMake ben funzionanti non creano alcun output nella directory sorgente, quindi in genere l'utente esegue una compilazione fuori sorgente ed esegue la compilazione lì.  Innanzitutto, è necessario istruire CMake affinché generari un sistema di build adatto, poi l'utente richiama un tool di build per elaborare il sistema generato.  Il buildsystem generato è specifico per la macchina utilizzata per generarlo e non è ridistribuibile.  Ogni \"consumer\" di un pacchetto software con sorgente è tenuto a utilizzare CMake per generare un sistema di build specifico per il proprio sistema."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:27
msgid ""
"Generated buildsystems should generally be treated as read-only. The "
"CMake files as a primary artifact should completely specify the "
"buildsystem and there should be no reason to populate properties manually"
" in an IDE for example after generating the buildsystem.  CMake will "
"periodically rewrite the generated buildsystem, so modifications by users"
" will be overwritten."
msgstr "I sistemi di build generati dovrebbero generalmente essere trattati come di sola lettura. I file CMake come artefatto primario dovrebbero specificare completamente il sistema di build e non dovrebbero esserci motivi per popolare manualmente le proprietà in un IDE, ad esempio dopo aver generato il sistema di build.  CMake riscriverà periodicamente il sistema di build generato, quindi le modifiche apportate dagli utenti verranno sovrascritte."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:35
msgid ""
"The features and user interfaces described in this manual are available "
"for all CMake-based build systems by virtue of providing CMake files."
msgstr "Le funzionalità e le interfacce utente descritte in questo manuale sono disponibili per tutti i sistemi di build basati su CMake grazie ai file CMake."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:39
msgid ""
"The CMake tooling may report errors to the user when processing provided "
"CMake files, such as reporting that the compiler is not supported, or the"
" compiler does not support a required compile option, or a dependency can"
" not be found.  These errors must be resolved by the user by choosing a "
"different compiler, :guide:`installing dependencies <Using Dependencies "
"Guide>`, or instructing CMake where to find them, etc."
msgstr "Gli strumenti CMake potrebbero segnalare errori all'utente durante l'elaborazione dei file CMake forniti, ad esempio segnalare che il compilatore non è supportato o che il compilatore non supporta un'opzione di compilazione richiesta oppure che non è possibile trovare una dipendenza.  Questi errori devono essere risolti dall'utente scegliendo un compilatore diverso, :guide:`installing dependencies <Using Dependencies Guide>`, o indicando a CMake dove trovarli, ecc."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:49
msgid "Command Line cmake tool"
msgstr "Strumento cmake da Riga di Comando"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:51
msgid ""
"A simple but typical use of :manual:`cmake(1)` with a fresh copy of "
"software source code is to create a build directory and invoke cmake "
"there:"
msgstr "Un uso semplice ma tipico di :manual:`cmake(1)` con una nuova copia del codice sorgente del software è quello di creare una directory di build e invocarvi cmake:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:64
msgid ""
"It is recommended to build in a separate directory to the source because "
"that keeps the source directory pristine, allows for building a single "
"source with multiple toolchains, and allows easy clearing of build "
"artifacts by simply deleting the build directory."
msgstr "Si consiglia di creare una directory separata rispetto al sorgente perché ciò mantiene la directory dei sorgenti incontaminata, consente di creare una singola sorgente con più toolchain e consente una facile cancellazione degli artefatti di build semplicemente eliminando la directory di build."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:70
msgid ""
"The CMake tooling may report warnings which are intended for the provider"
" of the software, not intended for the consumer of the software.  Such "
"warnings end with \"This warning is for project developers\".  Users may "
"disable such warnings by passing the ``-Wno-dev`` flag to "
":manual:`cmake(1)`."
msgstr "Gli strumenti CMake possono segnalare warning destinati al fornitore del software, non all'utente del software.  Tali warning terminano con \"This warning is for project developers\".  Gli utenti possono disabilitare tali avvisi passando il flag ``-Wno-dev`` a :manual:`cmake(1)`."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:78
msgid "cmake-gui tool"
msgstr "Il tool cmake-gui"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:80
msgid ""
"Users more accustomed to GUI interfaces may use the :manual:`cmake-"
"gui(1)` tool to invoke CMake and generate a buildsystem."
msgstr "Gli utenti più abituati alle interfacce GUI possono utilizzare :manual:`cmake-gui(1)` per invocare CMake e generare un sistema di build."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:84
msgid ""
"The source and binary directories must first be populated.  It is always "
"advised to use different directories for the source and the build."
msgstr "Le directory sorgente e binaria devono prima essere popolate.  Si consiglia sempre di utilizzare directory diverse per il sorgente e la build."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:-1
msgid "Choosing source and binary directories"
msgstr "Scelta delle directory per i sorgenti e i binari"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:92
msgid "Generating a Buildsystem"
msgstr "Generazione di un Buildsystem"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:94
msgid ""
"There are several user interface tools which may be used to generate a "
"buildsystem from CMake files.  The :manual:`ccmake(1)` and :manual"
":`cmake-gui(1)` tools guide the user through setting the various "
"necessary options. The :manual:`cmake(1)` tool can be invoked to specify "
"options on the command line.  This manual describes options which may be "
"set using any of the user interface tools, though the mode of setting an "
"option is different for each tool."
msgstr "Esistono diversi strumenti dell'interfaccia utente utilizzabili per generare un sistema di build dai file CMake.  Gli strumenti :manual:`ccmake(1)` e :manual:`cmake-gui(1)` guidano l'utente attraverso l'impostazione delle varie opzioni necessarie. Il tool :manual:`cmake(1)` può essere richiamato per specificare le opzioni sulla riga di comando.  Questo manuale descrive le opzioni che possono essere impostate utilizzando uno qualsiasi degli strumenti dell'interfaccia utente, sebbene la modalità di impostazione di un'opzione sia diversa per ciascuno."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:105
msgid "Command line environment"
msgstr "Ambiente della riga di comando"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:107
msgid ""
"When invoking :manual:`cmake(1)` with a command line buildsystem such as "
"``Makefiles`` or ``Ninja``, it is necessary to use the correct build "
"environment to ensure that build tools are available. CMake must be able "
"to find the appropriate :variable:`build tool <CMAKE_MAKE_PROGRAM>`, "
"compiler, linker and other tools as needed."
msgstr "Quando si invoca :manual:`cmake(1)` con un buildsystem a riga di comando come ``Makefiles`` o ``Ninja``, è necessario utilizzare l'ambiente di build corretto per garantire che gli strumenti siano disponibili. CMake deve essere in grado di trovare il :variable:`tool di build <CMAKE_MAKE_PROGRAM>` il compilatore, il linker e altri strumenti appropriati secondo necessità."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:115
msgid ""
"On Linux systems, the appropriate tools are often provided in system-wide"
" locations and may be readily installed through the system package "
"manager. Other toolchains provided by the user or installed in non-"
"default locations can also be used."
msgstr "Sui sistemi Linux, gli strumenti appropriati vengono spesso forniti in posizioni a livello di sistema e possono essere facilmente installati tramite il gestore pacchetti di sistema. È possibile utilizzare anche altre toolchain fornite dall'utente o installate in posizioni non predefinite."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:121
msgid ""
"When cross-compiling, some platforms may require environment variables to"
" be set or may provide scripts to set the environment."
msgstr "Durante la cross-compilazione, alcune piattaforme potrebbero richiedere l'impostazione di variabili di ambiente o fornire script per impostare l'ambiente."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:125
msgid ""
"Visual Studio ships multiple command prompts and ``vcvarsall.bat`` "
"scripts for setting up the correct environments for command line "
"buildsystems. While not strictly necessary to use a corresponding command"
" line environment when using a Visual Studio generator, doing so has no "
"disadvantages."
msgstr "Visual Studio fornisce più prompt dei comandi e script ``vcvarsall.bat`` per impostare gli ambienti corretti per i buildsystem a riga di comando. Sebbene non sia strettamente necessario utilizzare un ambiente a riga di comando corrispondente quando si utilizza un generatore come Visual Studio, farlo non presenta svantaggi."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:132
msgid ""
"When using Xcode, there can be more than one Xcode version installed.  "
"Which one to use can be selected in a number of different ways, but the "
"most common methods are:"
msgstr "Quando si utilizza Xcode, è possibile che sia installata più di una versione di Xcode.  Quale utilizzare può essere selezionato in diversi modi, ma i metodi più comuni sono:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:137
msgid "Setting the default version in the preferences of the Xcode IDE."
msgstr "Impostazione della versione di default nelle preferenze dell'IDE Xcode."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:139
msgid "Setting the default version via the ``xcode-select`` command line tool."
msgstr "Impostazione della versione di default tramite lo strumento a riga di comando ``xcode-select``."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:141
msgid ""
"Overriding the default version by setting the ``DEVELOPER_DIR`` "
"environment variable when running CMake and the build tool."
msgstr "Sostituire la versione di default impostando la variabile di ambiente ``DEVELOPER_DIR`` durante l'esecuzione di CMake e dello strumento di build."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:145
msgid ""
"For convenience, :manual:`cmake-gui(1)` provides an environment variable "
"editor."
msgstr "Per comodità, :manual:`cmake-gui(1)` fornisce un editor di variabili d'ambiente."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:149
msgid "Command line ``-G`` option"
msgstr "L'opzione ``-G`` della riga di comando"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:151
msgid ""
"CMake chooses a generator by default based on the platform.  Usually, the"
" default generator is sufficient to allow the user to proceed to build "
"the software."
msgstr "CMake sceglie un generatore per default in base alla piattaforma.  Di solito, il generatore di default è sufficiente per consentire all'utente di procedere alla build del software."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:155
msgid "The user may override the default generator with the ``-G`` option:"
msgstr "L'utente può sovrascrivere il generatore di default con l'opzione ``-G``:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:162
msgid ""
"The output of ``cmake --help`` includes a list of :manual:`generators "
"<cmake-generators(7)>` available for the user to choose from.  Note that "
"generator names are case sensitive."
msgstr "L'output di ``cmake --help`` include un elenco dei :manual:`generatori <cmake-generators(7)>` tra cui l'utente può scegliere.  Notare che i nomi dei generatori fanno distinzione tra maiuscole e minuscole."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:167
msgid ""
"On Unix-like systems (including Mac OS X), the :generator:`Unix "
"Makefiles` generator is used by default.  A variant of that generator can"
" also be used on Windows in various environments, such as the "
":generator:`NMake Makefiles` and :generator:`MinGW Makefiles` generator."
"  These generators generate a ``Makefile`` variant which can be executed "
"with ``make``, ``gmake``, ``nmake`` or similar tools. See the individual "
"generator documentation for more information on targeted environments and"
" tools."
msgstr "Sui sistemi simili a Unix (incluso Mac OS X), il generatore :generator:`Unix Makefiles` viene utilizzato per default.  Una variante di quel generatore può essere utilizzata anche su Windows in vari ambienti, come il generatore :generator:`NMake Makefiles` e :generator:`MinGW Makefiles`.  Questi generatori producono una variante di ``Makefile`` eseguibile con ``make``, ``gmake``, ``nmake`` o strumenti simili. Consulta la documentazione del singolo generatore per ulteriori informazioni sugli ambienti e sugli strumenti specifici."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:178
msgid ""
"The :generator:`Ninja` generator is available on all major platforms. "
"``ninja`` is a build tool similar in use-cases to ``make``, but with a "
"focus on performance and efficiency."
msgstr "Il generatore :generator:`Ninja` è disponibile su tutte le principali piattaforme. ``ninja`` è uno strumento di build simile nei casi d'uso a ``make``, ma con un focus su prestazioni ed efficienza."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:183
msgid ""
"On Windows, :manual:`cmake(1)` can be used to generate solutions for the "
"Visual Studio IDE.  Visual Studio versions may be specified by the "
"product name of the IDE, which includes a four-digit year.  Aliases are "
"provided for other means by which Visual Studio versions are sometimes "
"referred to, such as two digits which correspond to the product version "
"of the VisualC++ compiler, or a combination of the two:"
msgstr "Su Windows, è possibile utilizzare :manual:`cmake(1)` per generare soluzioni per l'IDE di Visual Studio.  Le versioni di Visual Studio possono essere specificate dal nome del prodotto dell'IDE, che include un anno a quattro cifre.  Vengono forniti alias per altri significati con cui a volte si fa riferimento alle versioni di Visual Studio, ad esempio due cifre che corrispondono alla versione del prodotto del compilatore VisualC++ o una combinazione dei due:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:198
msgid ""
"Visual Studio generators can target different architectures. One can "
"specify the target architecture using the `-A` option:"
msgstr "I generatori di Visual Studio possono avere come target architetture diverse. È possibile specificare l'architettura del target utilizzando l'opzione `-A`:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:207
msgid ""
"On Apple, the :generator:`Xcode` generator may be used to generate "
"project files for the Xcode IDE."
msgstr "Su Apple, il generatore :generator:`Xcode` può essere utilizzato per generare file di progetto per l'IDE Xcode."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:210
msgid ""
"Some IDEs such as KDevelop4, QtCreator and CLion have native support for "
"CMake-based buildsystems.  Those IDEs provide user interface for "
"selecting an underlying generator to use, typically a choice between a "
"``Makefile`` or a ``Ninja`` based generator."
msgstr "Alcuni IDE come KDevelop4, QtCreator e CLion hanno il supporto nativo per i sistemi di build basati su CMake.  Questi IDE forniscono un'interfaccia utente per selezionare un generatore da utilizzare, tipicamente una scelta tra un generatore basato su ``Makefile`` o su ``Ninja``."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:216
msgid ""
"Note that it is not possible to change the generator with ``-G`` after "
"the first invocation of CMake.  To change the generator, the build "
"directory must be deleted and the build must be started from scratch."
msgstr "Notare che non è possibile modificare il generatore con ``-G`` dopo la prima invocazione di CMake.  Per modificare il generatore è necessario eliminare la directory di build e avviare la build da zero."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:221
msgid ""
"When generating Visual Studio project and solutions files several other "
"options are available to use when initially running :manual:`cmake(1)`."
msgstr "Quando si generano file di progetto e soluzioni di Visual Studio, sono disponibili diverse altre opzioni da utilizzare durante la prima esecuzione di  :manual:`cmake(1)`."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:225
msgid "The Visual Studio toolset can be specified with the ``-T`` option:"
msgstr "Il set di tool di Visual Studio può essere specificato con l'opzione  ``-T``:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:235
msgid ""
"Whereas the ``-A`` option specifies the _target_ architecture, the ``-T``"
" option can be used to specify details of the toolchain used.  For "
"example, `-Thost=x64` can be given to select the 64-bit version of the "
"host tools.  The following demonstrates how to use 64-bit tools and also "
"build for a 64-bit target architecture:"
msgstr "Mentre l'opzione ``-A`` specifica l'architettura _target_, l'opzione ``-T`` può essere utilizzata per specificare i dettagli della toolchain utilizzata.  Ad esempio, è possibile fornire `-Thost=x64` per selezionare la versione a 64 bit degli strumenti host.  Di seguito viene illustrato come utilizzare i tool a 64 bit ed eseguire una build per un'architettura target a 64 bit:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:247
msgid "Choosing a generator in cmake-gui"
msgstr "Scelta di un generatore in cmake-gui"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:249
msgid ""
"The \"Configure\" button triggers a new dialog to select the CMake "
"generator to use."
msgstr "Il pulsante \"Configure\" attiva una nuova finestra di dialogo per selezionare il generatore CMake da utilizzare."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:-1
msgid "Configuring a generator"
msgstr "Configurare un generatore"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:255
msgid ""
"All generators available on the command line are also available in "
":manual:`cmake-gui(1)`."
msgstr "Tutti i generatori disponibili sulla riga di comando sono disponibili anche in :manual:`cmake-gui(1)`."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:-1
msgid "Choosing a generator"
msgstr "Scegliere un generatore"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:261
msgid ""
"When choosing a Visual Studio generator, further options are available to"
" set an architecture to generate for."
msgstr "Quando si sceglie un generatore di Visual Studio, sono disponibili ulteriori opzioni per impostare un'architettura per la quale generare."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:-1
msgid "Choosing an architecture for Visual Studio generators"
msgstr "Scegliere un'architettura per i generatori di Visual Studio"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:270
msgid "Setting Build Variables"
msgstr "Impostazione delle Variabili di Build"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:272
msgid ""
"Software projects often require variables to be set on the command line "
"when invoking CMake.  Some of the most commonly used CMake variables are "
"listed in the table below:"
msgstr "I progetti software spesso richiedono l'impostazione di variabili sulla riga di comando quando si richiama CMake.  Alcune delle variabili CMake più comunemente utilizzate sono elencate nella tabella seguente:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:278
msgid "Variable"
msgstr "Variabile"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:278
msgid "Meaning"
msgstr "Significato"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:280
msgid ":variable:`CMAKE_PREFIX_PATH`"
msgstr ":variable:`CMAKE_PREFIX_PATH`"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:280
msgid "Path to search for :guide:`dependent packages <Using Dependencies Guide>`"
msgstr "Percorso per cercare :guide:`pacchetti dipendenti <Using Dependencies Guide>`"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:282
msgid ":variable:`CMAKE_MODULE_PATH`"
msgstr ":variable:`CMAKE_MODULE_PATH`"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:282
msgid "Path to search for additional CMake modules"
msgstr "Percorso per cercare moduli CMake aggiuntivi"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:283
msgid ":variable:`CMAKE_BUILD_TYPE`"
msgstr ":variable:`CMAKE_BUILD_TYPE`"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:283
msgid ""
"Build configuration, such as ``Debug`` or ``Release``, determining "
"debug/optimization flags.  This is only relevant for single-configuration"
" buildsystems such as ``Makefile`` and ``Ninja``.  Multi-configuration "
"buildsystems such as those for Visual Studio and Xcode ignore this "
"setting."
msgstr "Configurazione di build, come ``Debug`` o ``Release``, determinando i flag di debug/ottimizzazione.  Ciò è rilevante solo per sistemi di compilazione a configurazione singola come ``Makefile`` e ``Ninja``.  I sistemi di build multiconfigurazione come quelli per Visual Studio e Xcode ignorano questa impostazione."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:290
msgid ":variable:`CMAKE_INSTALL_PREFIX`"
msgstr ":variable:`CMAKE_INSTALL_PREFIX`"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:290
msgid "Location to install the software to with the ``install`` build target"
msgstr "Locazione in cui installare il software col target della build ``install``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:293
msgid ":variable:`CMAKE_TOOLCHAIN_FILE`"
msgstr ":variable:`CMAKE_TOOLCHAIN_FILE`"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:293
msgid ""
"File containing cross-compiling data such as :manual:`toolchains and "
"sysroots <cmake-toolchains(7)>`."
msgstr "File contenente dati di cross-compilazione come :manual:`toolchains e sysroots <cmake-toolchains(7)>`."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:296
msgid ":variable:`BUILD_SHARED_LIBS`"
msgstr ":variable:`BUILD_SHARED_LIBS`"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:296
msgid ""
"Whether to build shared instead of static libraries for "
":command:`add_library` commands used without a type"
msgstr "Se creare librerie shared anziché statiche per i comandi :command:`add_library` utilizzati senza un tipo"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:300
msgid ":variable:`CMAKE_EXPORT_COMPILE_COMMANDS`"
msgstr ":variable:`CMAKE_EXPORT_COMPILE_COMMANDS`"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:300
msgid "Generate a ``compile_commands.json`` file for use with clang-based tools"
msgstr "Genera un file ``compile_commands.json`` da utilizzare con strumenti basati su clang"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:304
msgid ""
"Other project-specific variables may be available to control builds, such"
" as enabling or disabling components of the project."
msgstr "Potrebbero essere disponibili altre variabili specifiche del progetto per controllare le build, come l'abilitazione o la disabilitazione dei componenti del progetto."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:308
msgid ""
"There is no convention provided by CMake for how such variables are named"
" between different provided buildsystems, except that variables with the "
"prefix ``CMAKE_`` usually refer to options provided by CMake itself and "
"should not be used in third-party options, which should use their own "
"prefix instead.  The :manual:`cmake-gui(1)` tool can display options in "
"groups defined by their prefix, so it makes sense for third parties to "
"ensure that they use a self-consistent prefix."
msgstr "Non esiste alcuna convenzione fornita da CMake su come tali variabili vengono denominate tra i diversi sistemi di build forniti, tranne che le variabili con il prefisso ``CMAKE_`` di solito si riferiscono alle opzioni fornite da CMake stesso e non dovrebbero essere utilizzate in opzioni di terze parti, che dovrebbero utilizzare invece il proprio prefisso.  Il tool :manual:`cmake-gui(1)` può visualizzare le opzioni in gruppi definiti dal loro prefisso, quindi è logico che terze parti si assicurino di utilizzare un prefisso auto-coerente."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:321
msgid "Setting variables on the command line"
msgstr "Impostazione delle variabili sulla riga di comando"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:323
msgid ""
"CMake variables can be set on the command line either when creating the "
"initial build:"
msgstr "Le variabili CMake possono essere impostate sulla riga di comando durante la creazione della build iniziale:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:332
msgid "or later on a subsequent invocation of :manual:`cmake(1)`:"
msgstr "o successivamente in una ulteriore invocazione di :manual:`cmake(1)`:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:340
msgid ""
"The ``-U`` flag may be used to unset variables on the :manual:`cmake(1)` "
"command line:"
msgstr "Il flag ``-U`` può essere utilizzato per annullare l'impostazione delle variabili sulla riga di comando di :manual:`cmake(1)`:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:348
msgid ""
"A CMake buildsystem which was initially created on the command line can "
"be modified using the :manual:`cmake-gui(1)` and vice-versa."
msgstr "Un buildsystem CMake inizialmente creato sulla riga di comando può essere modificato utilizzando :manual:`cmake-gui(1)` e viceversa."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:352
msgid ""
"The :manual:`cmake(1)` tool allows specifying a file to use to populate "
"the initial cache using the ``-C`` option.  This can be useful to "
"simplify commands and scripts which repeatedly require the same cache "
"entries."
msgstr "Il tool :manual:`cmake(1)` consente di specificare un file da utilizzare per popolare la cache iniziale utilizzando l'opzione ``-C``.  Ciò può essere utile per semplificare comandi e script che richiedono ripetutamente le stesse voci della cache."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:359
msgid "Setting variables with cmake-gui"
msgstr "Impostazione delle variabili con cmake-gui"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:361
msgid ""
"Variables may be set in the cmake-gui using the \"Add Entry\" button.  "
"This triggers a new dialog to set the value of the variable."
msgstr "Le variabili possono essere impostate in cmake-gui utilizzando il pulsante \"Add Entry\".  Ciò attiva una nuova finestra di dialogo per impostare il valore della variabile."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:-1
msgid "Editing a cache entry"
msgstr "Modifica di una voce della cache"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:368
msgid ""
"The main view of the :manual:`cmake-gui(1)` user interface can be used to"
" edit existing variables."
msgstr "La vista principale dell'interfaccia utente di :manual:`cmake-gui(1)` può essere utilizzata per modificare le variabili esistenti."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:372
msgid "The CMake Cache"
msgstr "La Cache di CMake"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:374
msgid ""
"When CMake is executed, it needs to find the locations of compilers, "
"tools and dependencies.  It also needs to be able to consistently re-"
"generate a buildsystem to use the same compile/link flags and paths to "
"dependencies.  Such parameters are also required to be configurable by "
"the user because they are paths and options specific to the users system."
msgstr "Quando CMake viene eseguito, è necessario trovare le posizioni di compilatori, tool e dipendenze.  Deve anche essere in grado di rigenerare in modo coerente un sistema di build per utilizzare gli stessi flag di compilazione/link e percorsi per le dipendenze.  Tali parametri devono inoltre essere configurabili dall'utente perché sono percorsi e opzioni specifici del sistema dell'utente."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:382
msgid ""
"When it is first executed, CMake generates a ``CMakeCache.txt`` file in "
"the build directory containing key-value pairs for such artifacts.  The "
"cache file can be viewed or edited by the user by running the :manual"
":`cmake-gui(1)` or :manual:`ccmake(1)` tool.  The tools provide an "
"interactive interface for re-configuring the provided software and re-"
"generating the buildsystem, as is needed after editing cached values.  "
"Each cache entry may have an associated short help text which is "
"displayed in the user interface tools."
msgstr "Quando viene eseguito per la prima volta, CMake genera un file ``CMakeCache.txt`` nella directory di build contenente coppie chiave-valore per tali artefatti.  Il file della cache può essere visualizzato o modificato dall'utente eseguendo :manual:`cmake-gui(1)` o :manual:`ccmake(1)`.  Gli strumenti forniscono un'interfaccia interattiva per riconfigurare il software e rigenerare il sistema di build, come necessario dopo aver modificato i valori memorizzati nella cache.  A ciascuna voce della cache può essere associato un breve testo di aiuto che viene visualizzato nei tool dell'interfaccia utente."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:393
msgid ""
"The cache entries may also have a type to signify how it should be "
"presented in the user interface.  For example, a cache entry of type "
"``BOOL`` can be edited by a checkbox in a user interface, a ``STRING`` "
"can be edited in a text field, and a ``FILEPATH`` while similar to a "
"``STRING`` should also provide a way to locate filesystem paths using a "
"file dialog.  An entry of type ``STRING`` may provide a restricted list "
"of allowed values which are then provided in a drop-down menu in the "
":manual:`cmake-gui(1)` user interface (see the :prop_cache:`STRINGS` "
"cache property)."
msgstr "Le voci della cache possono anche avere un tipo per indicare come dovrebbero essere presentate nell'interfaccia utente.  Ad esempio, una voce della cache di tipo ``BOOL`` può essere modificata da una casella di controllo in un'interfaccia utente, una ``STRING`` può essere modificata in un campo di testo e un ``FILEPATH`` pur essendo simile a ``STRING`` dovrebbe anche fornire un modo per individuare i percorsi del filesystem utilizzando una finestra di dialogo per i file.  Una voce di tipo ``STRING`` potrebbe consentire un elenco ristretto di valori che vengono poi forniti in un menù a discesa nell'interfaccia utente :manual:`cmake-gui(1)` (vedere la sezione della proprietà della cache :prop_cache:`STRINGS`)."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:405
msgid ""
"The CMake files shipped with a software package may also define boolean "
"toggle options using the :command:`option` command.  The command creates "
"a cache entry which has a help text and a default value.  Such cache "
"entries are typically specific to the provided software and affect the "
"configuration of the build, such as whether tests and examples are built,"
" whether to build with exceptions enabled etc."
msgstr "I file CMake forniti con un pacchetto software possono anche definire opzioni di attivazione/disattivazione booleane utilizzando il comando :command:`option`.  Il comando crea una voce nella cache che ha un testo di aiuto e un valore di default.  Tali voci della cache sono in genere specifiche del software fornito e influiscono sulla configurazione della build, ad esempio se vengono creati test ed esempi, se compilare con le eccezioni abilitate, ecc."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:417
msgid ""
"CMake understands a file, ``CMakePresets.json``, and its user-specific "
"counterpart, ``CMakeUserPresets.json``, for saving presets for commonly-"
"used configure settings. These presets can set the build directory, "
"generator, cache variables, environment variables, and other command-line"
" options. All of these options can be overridden by the user. The full "
"details of the ``CMakePresets.json`` format are listed in the :manual"
":`cmake-presets(7)` manual."
msgstr "CMake riconosce un file, ``CMakePresets.json``, e la sua controparte specifica dell'utente, ``CMakeUserPresets.json``, per il salvataggio delle preimpostazioni per le configurazione di uso comune. Queste preimpostazioni possono impostare la directory di build, il generatore, le variabili della cache, le variabili di ambiente e altre opzioni della riga di comando. Tutte queste opzioni possono essere sovrascritte dall'utente. I dettagli completi del formato ``CMakePresets.json`` sono elencati nel manuale :manual:`cmake-presets(7)`."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:427
msgid "Using presets on the command-line"
msgstr "Utilizzo delle preimpostazioni sulla riga di comando"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:429
msgid ""
"When using the :manual:`cmake(1)` command line tool, a preset can be "
"invoked by using the ``--preset`` option. If ``--preset`` is specified, "
"the generator and build directory are not required, but can be specified "
"to override them. For example, if you have the following "
"``CMakePresets.json`` file:"
msgstr "Quando si utilizza lo strumento da riga di comando :manual:`cmake(1)`, è possibile richiamare un preset utilizzando l'opzione ``--preset``. Se viene specificato ``--preset``, il generatore e la directory di build non sono necessari, ma possono essere specificati per sovrascriverli. Ad esempio, se si ha il seguente file ``CMakePresets.json``:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:452
msgid "and you run the following:"
msgstr "e si esegue quanto segue:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:458
msgid ""
"This will generate a build directory in ``/path/to/source/build/ninja-"
"release`` with the :generator:`Ninja` generator, and with "
":variable:`CMAKE_BUILD_TYPE` set to ``Release``."
msgstr "Questo genererà una directory di build in ``/path/to/source/build/ninja-release`` col generatore :generator:`Ninja` generator e con :variable:`CMAKE_BUILD_TYPE` impostato su ``Release``."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:463
msgid "If you want to see the list of available presets, you can run:"
msgstr "Per vedere l'elenco dei preset disponibili, si può eseguire:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:470
msgid ""
"This will list the presets available in "
"``/path/to/source/CMakePresets.json`` and "
"``/path/to/source/CMakeUsersPresets.json`` without generating a build "
"tree."
msgstr "Questo elencherà le preimpostazioni disponibili in ``/path/to/source/CMakePresets.json`` e in ``/path/to/source/CMakeUsersPresets.json`` senza generare un albero di build."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:476
msgid "Using presets in cmake-gui"
msgstr "Utilizzo dei preset in cmake-gui"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:478
msgid ""
"If a project has presets available, either through ``CMakePresets.json`` "
"or ``CMakeUserPresets.json``, the list of presets will appear in a drop-"
"down menu in :manual:`cmake-gui(1)` between the source directory and the "
"binary directory. Choosing a preset sets the binary directory, generator,"
" environment variables, and cache variables, but all of these options can"
" be overridden after a preset is selected."
msgstr "Se un progetto ha dei preset disponibili, tramite ``CMakePresets.json`` o ``CMakeUserPresets.json``, l'elenco dei preset apparirà in un menù a discesa in :manual:`cmake-gui(1)` tra la directory dei sorgenti e quella binaria. La scelta di una preimpostazione imposta la directory binaria, il generatore, le variabili di ambiente e le variabili della cache, ma tutte queste opzioni possono essere sovrascritte dopo aver selezionato una preimpostazione."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:488
msgid "Invoking the Buildsystem"
msgstr "Invocare il Buildsystem"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:490
msgid ""
"After generating the buildsystem, the software can be built by invoking "
"the particular build tool.  In the case of the IDE generators, this can "
"involve loading the generated project file into the IDE to invoke the "
"build."
msgstr "Dopo aver generato il sistema di build, è possibile creare il software richiamando il particolare tool.  Nel caso dei generatori IDE, ciò può comportare il caricamento del file di progetto generato nell'IDE per richiamare la build."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:496
msgid ""
"CMake is aware of the specific build tool needed to invoke a build so in "
"general, to build a buildsystem or project from the command line after "
"generating, the following command may be invoked in the build directory:"
msgstr "CMake è a conoscenza dello strumento specifico necessario per invocare una build quindi, in generale, per creare un sistema di build o un progetto dalla riga di comando dopo la generazione, è possibile invocare il seguente comando nella directory di build:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:505
msgid ""
"The ``--build`` flag enables a particular mode of operation for the "
":manual:`cmake(1)` tool.  It invokes the  :variable:`CMAKE_MAKE_PROGRAM` "
"command associated with the :manual:`generator <cmake-generators(7)>`, or"
" the build tool configured by the user."
msgstr "Il flag ``--build`` abilita una particolare modalità operativa per :manual:`cmake(1)`.  Invoca il comando :variable:`CMAKE_MAKE_PROGRAM` associato al :manual:`generatore <cmake-generators(7)>` o allo strumento di build configurato dall'utente."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:511
msgid ""
"The ``--build`` mode also accepts the parameter ``--target`` to specify a"
" particular target to build, for example a particular library, executable"
" or custom target, or a particular special target like ``install``:"
msgstr "La modalità ``--build`` accetta anche il parametro ``--target`` per specificare un particolare target da compilare, ad esempio una particolare libreria, un eseguibile o un target personalizzato, o un particolare target speciale come ``install``:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:521
msgid ""
"The ``--build`` mode also accepts a ``--config`` parameter in the case of"
" multi-config generators to specify which particular configuration to "
"build:"
msgstr "La modalità ``--build`` accetta anche un parametro ``--config`` nel caso di generatori multi-config per specificare quale particolare configurazione buildare:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:529
msgid ""
"The ``--config`` option has no effect if the generator generates a "
"buildsystem specific to a configuration which is chosen when invoking "
"cmake with the :variable:`CMAKE_BUILD_TYPE` variable."
msgstr "L'opzione ``--config`` non ha effetto se il generatore genera un sistema di build specifico per una configurazione scelta quando si invoca cmake con la variabile :variable:`CMAKE_BUILD_TYPE`."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:534
msgid ""
"Some buildsystems omit details of command lines invoked during the build."
"  The ``--verbose`` flag can be used to cause those command lines to be "
"shown:"
msgstr "Alcuni sistemi di build omettono i dettagli delle righe di comando invocate durante la build.  Il flag ``--verbose`` può essere utilizzato per visualizzare tali righe di comando:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:542
msgid ""
"The ``--build`` mode can also pass particular command line options to the"
" underlying build tool by listing them after ``--``.  This can be useful "
"to specify options to the build tool, such as to continue the build after"
" a failed job, where CMake does not provide a high-level user interface."
msgstr "La modalità ``--build`` può anche passare particolari opzioni della riga di comando allo strumento di build sottostante elencandole dopo ``--``.  Ciò può essere utile per specificare le opzioni per lo strumento di build, ad esempio per continuare dopo una build non riuscita, in cui CMake non fornisce un'interfaccia utente di alto livello."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:549
msgid ""
"For all generators, it is possible to run the underlying build tool after"
" invoking CMake.  For example, ``make`` may be executed after generating "
"with the :generator:`Unix Makefiles` generator to invoke the build, or "
"``ninja`` after generating with the :generator:`Ninja` generator etc.  "
"The IDE buildsystems usually provide command line tooling for building a "
"project which can also be invoked."
msgstr "Per tutti i generatori, è possibile eseguire lo strumento di build sottostante dopo aver richiamato CMake.  Ad esempio, ``make`` può essere eseguito dopo aver generato con il generatore :generator:`Unix Makefiles` per invocare la build, o ``ninja`` dopo aver generato con il generatore :generator:`Ninja` ecc.  I sistemi di build IDE di solito forniscono strumenti da riga di comando per creare un progetto che può anche essere invocato."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:559
msgid "Selecting a Target"
msgstr "Selezionare un Target"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:561
msgid ""
"Each executable and library described in the CMake files is a build "
"target, and the buildsystem may describe custom targets, either for "
"internal use, or for user consumption, for example to create "
"documentation."
msgstr "Ogni eseguibile e libreria descritta nei file CMake è un target della build e il sistema di build può descrivere target personalizzati, sia per uso interno che per consumo da parte dell'utente, ad esempio per creare documentazione."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:566
msgid ""
"CMake provides some built-in targets for all buildsystems providing CMake"
" files."
msgstr "CMake fornisce alcuni target nativi per tutti i sistemi di build che forniscono file CMake."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:575
msgid "``all``"
msgstr "``all``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:570
msgid ""
"The default target used by ``Makefile`` and ``Ninja`` generators.  Builds"
" all targets in the buildsystem, except those which are excluded by their"
" :prop_tgt:`EXCLUDE_FROM_ALL` target property or "
":prop_dir:`EXCLUDE_FROM_ALL` directory property.  The name ``ALL_BUILD`` "
"is used for this purpose for the Xcode and Visual Studio generators."
msgstr "Il target di default utilizzato dai generatori ``Makefile`` e ``Ninja``.  Esegue la build di tutti i target nel buildsystem, eccetto quelli che sono esclusi dalla loro proprietà di target :prop_tgt:`EXCLUDE_FROM_ALL` o dalla proprietà di directory :prop_dir:`EXCLUDE_FROM_ALL`.  A questo scopo viene utilizzato il nome ``ALL_BUILD`` per i generatori Xcode e Visual Studio."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:580
msgid "``help``"
msgstr "``help``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:578
msgid ""
"Lists the targets available for build.  This target is available when "
"using the :generator:`Unix Makefiles` or :generator:`Ninja` generator, "
"and the exact output is tool-specific."
msgstr "Elenca i target disponibili per la build.  Questo target è disponibile quando si usa il generatore :generator:`Unix Makefiles` o :generator:`Ninja` e l'output esatto è specifico del tool."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:586
msgid "``clean``"
msgstr "``clean``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:583
msgid ""
"Delete built object files and other output files.  The ``Makefile`` based"
" generators create a ``clean`` target per directory, so that an "
"individual directory can be cleaned.  The ``Ninja`` tool provides its own"
" granular ``-t clean`` system."
msgstr "Elimina i file oggetto creati e altri file di output.  I generatori basati su ``Makefile`` creano un target ``pulito`` per ogni directory, in modo che una singola directory possa essere pulita.  ``Ninja`` fornisce il proprio sistema granulare ``-t clean``."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:590
msgid "``test``"
msgstr "``test``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:589
msgid ""
"Runs tests.  This target is only automatically available if the CMake "
"files provide CTest-based tests.  See also `Running Tests`_."
msgstr "Esegue i test.  Questo target è disponibile automaticamente solo se i file CMake forniscono test basati su CTest.  Vedere anche `Running Tests`_."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:595
msgid "``install``"
msgstr "``install``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:593
msgid ""
"Installs the software.  This target is only automatically available if "
"the software defines install rules with the :command:`install` command.  "
"See also `Software Installation`_."
msgstr "Installa il software.  Questo target è disponibile automaticamente solo se il software definisce le regole di installazione col comando :command:`install`.  Vedere anche `Software Installation`_."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:599
msgid "``package``"
msgstr "``package``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:598
msgid ""
"Creates a binary package.  This target is only automatically available if"
" the CMake files provide CPack-based packages."
msgstr "Crea un pacchetto binario.  Questo target è disponibile automaticamente solo se i file CMake forniscono pacchetti basati su CPack."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:604
msgid "``package_source``"
msgstr "``package_source``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:602
msgid ""
"Creates a source package.  This target is only automatically available if"
" the CMake files provide CPack-based packages."
msgstr "Creare un pacchetto sorgente  Questo target è disponibile automaticamente solo se i file CMake forniscono pacchetti basati su CPack."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:606
msgid ""
"For ``Makefile`` based systems, ``/fast`` variants of binary build "
"targets are provided. The ``/fast`` variants are used to build the "
"specified target without regard for its dependencies.  The dependencies "
"are not checked and are not rebuilt if out of date.  The "
":generator:`Ninja` generator is sufficiently fast at dependency checking "
"that such targets are not provided for that generator."
msgstr "Per i sistemi basati su ``Makefile``, vengono fornite varianti ``/fast`` dei target binari creati. Le varianti ``/fast`` vengono utilizzate per creare il target specificato senza riguardo per le sue dipendenze.  Le dipendenze non vengono controllate e non vengono re-buildate se non aggiornate.  Il generatore :generator:`Ninja` è sufficientemente veloce nel controllare che tali dipendenze dei target non siano fornite per quel generatore."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:614
msgid ""
"``Makefile`` based systems also provide build-targets to preprocess, "
"assemble and compile individual files in a particular directory."
msgstr "I sistemi basati su ``Makefile`` forniscono anche target di build per pre-processare, assemblare e compilare singoli file in una particolare directory."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:624
msgid ""
"The file extension is built into the name of the target because another "
"file with the same name but a different extension may exist.  However, "
"build-targets without the file extension are also provided."
msgstr "L'estensione del file è inclusa nel nome del target perché potrebbe esistere un altro file con lo stesso nome ma con un'estensione diversa.  Tuttavia, vengono forniti anche build-target senza estensione del file."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:635
msgid ""
"In buildsystems which contain ``foo.c`` and ``foo.cpp``, building the "
"``foo.i`` target will preprocess both files."
msgstr "Nei sistemi di compilazione che contengono ``foo.c`` e ``foo.cpp``, la build del target ``foo.i`` preprocesserà entrambi i file."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:639
msgid "Specifying a Build Program"
msgstr "Specificare di un Programma di Build"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:641
msgid ""
"The program invoked by the ``--build`` mode is determined by the "
":variable:`CMAKE_MAKE_PROGRAM` variable.  For most generators, the "
"particular program does not need to be configured."
msgstr "Il programma richiamato dalla modalità ``--build`` è determinato dalla variabile :variable:`CMAKE_MAKE_PROGRAM`.  Per la maggior parte dei generatori non è necessario configurare il programma specifico."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:647
msgid "Generator"
msgstr "Generatore"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:647
msgid "Default make program"
msgstr "Programma make di default"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:647
msgid "Alternatives"
msgstr "Alternative"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:649
msgid "XCode"
msgstr "XCode"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:649
msgid "``xcodebuild``"
msgstr "``xcodebuild``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:650
msgid "Unix Makefiles"
msgstr "Unix Makefiles"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:650
#: ../../source/cmake/Help/guide/user-interaction/index.rst:654
msgid "``make``"
msgstr "``make``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:651
msgid "NMake Makefiles"
msgstr "NMake Makefiles"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:651
#: ../../source/cmake/Help/guide/user-interaction/index.rst:652
msgid "``nmake``"
msgstr "``nmake``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:651
#: ../../source/cmake/Help/guide/user-interaction/index.rst:652
msgid "``jom``"
msgstr "``jom``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:652
msgid "NMake Makefiles JOM"
msgstr "NMake Makefiles JOM"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:653
msgid "MinGW Makefiles"
msgstr "MinGW Makefiles"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:653
msgid "``mingw32-make``"
msgstr "``mingw32-make``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:654
msgid "MSYS Makefiles"
msgstr "MSYS Makefiles"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:655
msgid "Ninja"
msgstr "Ninja"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:655
msgid "``ninja``"
msgstr "``ninja``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:656
msgid "Visual Studio"
msgstr "Visual Studio"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:656
msgid "``msbuild``"
msgstr "``msbuild``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:657
msgid "Watcom WMake"
msgstr "Watcom WMake"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:657
msgid "``wmake``"
msgstr "``wmake``"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:660
msgid ""
"The ``jom`` tool is capable of reading makefiles of the ``NMake`` flavor "
"and building in parallel, while the ``nmake`` tool always builds "
"serially.  After generating with the :generator:`NMake Makefiles` "
"generator a user can run ``jom`` instead of ``nmake``.  The ``--build`` "
"mode would also use ``jom`` if the :variable:`CMAKE_MAKE_PROGRAM` was set"
" to ``jom`` while using the :generator:`NMake Makefiles` generator, and "
"as a convenience, the :generator:`NMake Makefiles JOM` generator is "
"provided to find ``jom`` in the normal way and use it as the "
":variable:`CMAKE_MAKE_PROGRAM`. For completeness, ``nmake`` is an "
"alternative tool which can process the output of the :generator:`NMake "
"Makefiles JOM` generator, but doing so would be a pessimisation."
msgstr "Il tool ``jom`` è in grado di leggere makefile del tipo ``NMake`` e di compilarli in parallelo, mentre ``nmake`` compila sempre serialmente.  Dopo aver generato con il generatore :generator:`NMake Makefiles` un utente può eseguire ``jom`` invece di ``nmake``.  La modalità ``--build`` utilizzerebbe anche ``jom`` se la :variable:`CMAKE_MAKE_PROGRAM` fosse impostata su ``jom`` durante l'utilizzo del generatore :generator:`NMake Makefiles`, e per comodità, viene fornito il generatore :generator:`NMake Makefiles JOM` per trovare ``jom`` nel modo normale e usarlo come :variable:`CMAKE_MAKE_PROGRAM`. Per completezza, ``nmake`` è uno strumento alternativo che può elaborare l'output del generatore :generator:`NMake Makefiles JOM`, ma farlo peggiorerebbe le cose."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:677
msgid "Software Installation"
msgstr "Installazione Software"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:679
msgid ""
"The :variable:`CMAKE_INSTALL_PREFIX` variable can be set in the CMake "
"cache to specify where to install the provided software.  If the provided"
" software has install rules, specified using the :command:`install` "
"command, they will install artifacts into that prefix.  On Windows, the "
"default installation location corresponds to the ``ProgramFiles`` system "
"directory which may be architecture specific.  On Unix hosts, "
"``/usr/local`` is the default installation location."
msgstr "La variabile :variable:`CMAKE_INSTALL_PREFIX` può essere impostata nella cache CMake per specificare dove installare il software.  Se il software fornito dispone di regole di installazione, specificate utilizzando il comando :command:`install`, verranno installati gli artefatti in quel prefisso.  Su Windows, il percorso di installazione predefinito corrisponde alla directory di sistema ``ProgramFiles`` che potrebbe essere specifica dell'architettura.  Sugli host Unix, ``/usr/local`` è il percorso di installazione predefinito."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:689
msgid ""
"The :variable:`CMAKE_INSTALL_PREFIX` variable always refers to the "
"installation prefix on the target filesystem."
msgstr "La variabile :variable:`CMAKE_INSTALL_PREFIX` si riferisce sempre al prefisso di installazione sul filesystem target."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:693
msgid ""
"In cross-compiling or packaging scenarios where the sysroot is read-only "
"or where the sysroot should otherwise remain pristine, the "
":variable:`CMAKE_STAGING_PREFIX` variable can be set to a location to "
"actually install the files."
msgstr "Negli scenari di cross-compilazione o di impacchettamento in cui il sysroot è di sola lettura o dove il sysroot dovrebbe comunque rimanere intatto, la variabile :variable:`CMAKE_STAGING_PREFIX` può essere impostata su una posizione per installare effettivamente i file."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:699
msgid "The commands:"
msgstr "I comandi:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:709
msgid ""
"result in files being installed to paths such as "
"``/tmp/package/lib/libfoo.so`` on the host machine. The ``/usr/local`` "
"location on the host machine is not affected."
msgstr "comportano l'installazione di file in percorsi come ``/tmp/package/lib/libfoo.so`` sul computer host. La posizione ``/usr/local`` sulla macchina host non è interessata."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:714
msgid ""
"Some provided software may specify ``uninstall`` rules, but CMake does "
"not generate such rules by default itself."
msgstr "Alcuni software forniti potrebbero specificare regole di ``uninstall``, ma CMake non genera tali regole per default."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:718
msgid "Running Tests"
msgstr "Esecuzione di Test"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:720
msgid ""
"The :manual:`ctest(1)` tool is shipped with the CMake distribution to "
"execute provided tests and report results.  The ``test`` build-target is "
"provided to run all available tests, but the :manual:`ctest(1)` tool "
"allows granular control over which tests to run, how to run them, and how"
" to report results.  Executing :manual:`ctest(1)` in the build directory "
"is equivalent to running the ``test`` target:"
msgstr ":manual:`ctest(1)` viene fornito con la distribuzione CMake per eseguire i test forniti e riportare i risultati.  Il build-target ``test`` viene fornito per eseguire tutti i test disponibili, ma :manual:`ctest(1)` consente un controllo granulare su quali test eseguire, come eseguirli e come riportare i risultati.  L'esecuzione di :manual:`ctest(1)` nella directory build equivale a eseguire il target ``test``:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:733
msgid ""
"A regular expression can be passed to run only tests which match the "
"expression.  To run only tests with ``Qt`` in their name:"
msgstr "È possibile passare un'espressione regolare per eseguire solo i test che corrispondono all'espressione.  Per eseguire solo i test con ``Qt`` nel nome:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:741
msgid ""
"Tests can be excluded by regular expression too.  To run only tests "
"without ``Qt`` in their name:"
msgstr "I test possono essere esclusi anche tramite espressioni regolari.  Per eseguire solo i test senza ``Qt`` nel nome:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:748
msgid ""
"Tests can be run in parallel by passing ``-j`` arguments to "
":manual:`ctest(1)`:"
msgstr "I test possono essere eseguiti in parallelo passando gli argomenti ``-j`` a :manual:`ctest(1)`:"

#: ../../source/cmake/Help/guide/user-interaction/index.rst:755
msgid ""
"The environment variable :envvar:`CTEST_PARALLEL_LEVEL` can alternatively"
" be set to avoid the need to pass ``-j``."
msgstr "In alternativa, è possibile impostare la variabile d'ambiente :envvar:`CTEST_PARALLEL_LEVEL` per evitare la necessità di passare ``-j``."

#: ../../source/cmake/Help/guide/user-interaction/index.rst:759
msgid ""
"By default :manual:`ctest(1)` does not print the output from the tests. "
"The command line argument ``-V`` (or ``--verbose``) enables verbose mode "
"to print the output from all tests. The ``--output-on-failure`` option "
"prints the test output for failing tests only.  The environment variable "
":envvar:`CTEST_OUTPUT_ON_FAILURE` can be set to ``1`` as an alternative "
"to passing the ``--output-on-failure`` option to :manual:`ctest(1)`."
msgstr "Per default :manual:`ctest(1)` non stampa l'output dei test. L'argomento della riga di comando ``-V`` (o ``--verbose``) abilita la modalità \"verbose\" per stampare l'output di tutti i test. L'opzione ``--output-on-failure`` stampa l'output del test solo per quelli falliti.  La variabile d'ambiente :envvar:`CTEST_OUTPUT_ON_FAILURE` può essere impostata su ``1`` come alternativa al passaggio dell'opzione ``--output-on-failure`` a :manual:`ctest(1)`."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:2
msgid "Using Dependencies Guide"
msgstr "Guida all'Uso delle Dipendenze"

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:11
msgid ""
"For developers wishing to use CMake to consume a third party binary "
"package, there are multiple possibilities regarding how to optimally do "
"so, depending on how CMake-aware the third-party library is."
msgstr "Per gli sviluppatori che desiderano utilizzare CMake per usare un pacchetto binario di terze parti, esistono molteplici possibilità su come farlo in modo ottimale, a seconda di quanto sia compatibile con CMake la libreria di terze parti."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:16
msgid ""
"CMake files provided with a software package contain instructions for "
"finding each build dependency.  Some build dependencies are optional in "
"that the build may succeed with a different feature set if the dependency"
" is missing, and some dependencies are required.  CMake searches well-"
"known locations for each dependency, and the provided software may supply"
" additional hints or locations to CMake to find each dependency."
msgstr "I file CMake forniti con un pacchetto software contengono istruzioni per trovare ciascuna dipendenza della build.  Alcune dipendenze di build sono facoltative in quanto questa potrebbe avere esito positivo con un set di funzionalità diverso se la dipendenza è mancante e alcune dipendenze sono obbligatorie.  CMake cerca posizioni note per ciascuna dipendenza e il software può fornire ulteriori suggerimenti o posizioni a CMake per trovare ciascuna dipendenza."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:25
msgid ""
"If a required dependency is not found by :manual:`cmake(1)`, the cache is"
" populated with an entry which contains a ``NOTFOUND`` value.  This value"
" can be replaced by specifying it on the command line, or in the "
":manual:`ccmake(1)` or :manual:`cmake-gui(1)` tool. See the :guide:`User "
"Interaction Guide` for more about setting cache entries."
msgstr "Se una dipendenza richiesta non viene trovata da :manual:`cmake(1)`, la cache viene popolata con una voce che contiene un valore ``NOTFOUND``.  Questo valore può essere sostituito specificandolo sulla riga di comando o nello strumento :manual:`ccmake(1)` oi in :manual:`cmake-gui(1)`. Consultare la guida :guide:`User Interaction Guide` per ulteriori informazioni sull'impostazione delle voci della cache."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:34
msgid "Libraries providing Config-file packages"
msgstr "Librerie che Forniscono Pacchetti di file di configurazione"

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:36
msgid ""
"The most convenient way for a third-party to provide library binaries for"
" use with CMake is to provide :ref:`Config File Packages`.  These "
"packages are text files shipped with the library which instruct CMake how"
" to use the library binaries and associated headers, helper tools and "
"CMake macros provided by the library."
msgstr "Il modo più conveniente per una terza parte di fornire file binari di libreria da utilizzare con CMake è fornire :ref:`Config File Packages`.  Questi pacchetti sono file di testo forniti con la libreria che istruiscono CMake su come utilizzare i file binari della libreria e gli header associati, gli strumenti di supporto e le macro CMake fornite dalla libreria."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:43
msgid ""
"The config files can usually be found in a directory whose name matches "
"the pattern ``lib/cmake/<PackageName>``, though they may be in other "
"locations instead.  The ``<PackageName>`` corresponds to use in CMake "
"code with the :command:`find_package` command such as "
"``find_package(PackageName REQUIRED)``."
msgstr "I file di configurazione di solito si trovano in una directory il cui nome corrisponde al pattern ``lib/cmake/<PackageName>``, anche se potrebbero trovarsi invece in altre posizioni.  Il ``<PackageName>`` corrisponde all'uso nel codice CMake con il comando :command:`find_package` come ``find_package(PackageName REQUIRED)``."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:50
msgid ""
"The ``lib/cmake/<PackageName>`` directory will contain a file which is "
"either named ``<PackageName>Config.cmake`` or "
"``<PackageName>-config.cmake``.  This is the entry point to the package "
"for CMake.  A separate optional file named "
"``<PackageName>ConfigVersion.cmake`` may also exist in the directory.  "
"This file is used by CMake to determine whether the version of the third "
"party package satisfies uses of the :command:`find_package` command which"
" specify version constraints.  It is optional to specify a version when "
"using :command:`find_package`, even if a ``ConfigVersion`` file is "
"present."
msgstr "La directory ``lib/cmake/<PackageName>`` conterrà un file denominato ``<PackageName>Config.cmake`` o ``<PackageName>-config.cmake``.  Questo è il punto di ingresso al pacchetto per CMake.  Nella directory potrebbe anche esistere un file facoltativo separato denominato ``<PackageName>ConfigVersion.cmake``.  Questo file viene utilizzato da CMake per determinare se la versione del pacchetto di terze parti soddisfa gli usi del comando :command:`find_package` che specifica i vincoli di versione.  È facoltativo specificare una versione quando si usa :command:`find_package`, anche se è presente un file ``ConfigVersion``."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:62
msgid ""
"If the ``Config.cmake`` file is found and the optionally-specified "
"version is satisfied, then the CMake :command:`find_package` command "
"considers the package to be found and the entire library package is "
"assumed to be complete as designed."
msgstr "Se il file ``Config.cmake`` viene trovato e la versione specificata facoltativamente è soddisfatta, allora il comando CMake :command:`find_package` considera il pacchetto da trovare e si presuppone che l'intero pacchetto della libreria sia completo come progettato."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:68
msgid ""
"There may be additional files providing CMake macros or :ref:`imported "
"targets` for you to use.  CMake does not enforce any naming convention "
"for these files.  They are related to the primary ``Config`` file by use "
"of the CMake :command:`include` command."
msgstr "Potrebbero esserci file aggiuntivi che forniscono macro CMake o :ref:`imported targets` da utilizzare.  CMake non applica alcuna convenzione sui nomi per questi file.  Sono correlati al file ``Config`` primario tramite l'uso del comando CMake :command:`include`."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:74
msgid ""
":guide:`Invoking CMake <User Interaction Guide>` with the intent of using"
" a package of third party binaries requires that cmake "
":command:`find_package` commands succeed in finding the package.  If the "
"location of the package is in a directory known to CMake, the "
":command:`find_package` call should succeed.  The directories known to "
"cmake are platform-specific. For example, packages installed on Linux "
"with a standard system package manager will be found in the ``/usr`` "
"prefix automatically.  Packages installed in ``Program Files`` on Windows"
" will similarly be found automatically."
msgstr ":guide:`Invocare CMake <User Interaction Guide>` con l'intento di utilizzare un pacchetto di file binari di terze parti richiede che i comandi cmake :command:`find_package` riescano a trovare il pacchetto.  Se la posizione del pacchetto è in una directory nota a CMake, la chiamata :command:`find_package` dovrebbe riuscire.  Le directory note a cmake sono specifiche della piattaforma. Ad esempio, i pacchetti installati su Linux con un gestore di pacchetti di sistema standard verranno trovati automaticamente nel prefisso ``/usr``.  Allo stesso modo, i pacchetti installati in ``Program Files`` su Windows verranno trovati automaticamente."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:85
msgid ""
"Packages which are not found automatically are in locations not "
"predictable to CMake such as ``/opt/mylib`` or ``$HOME/dev/prefix``.  "
"This is a normal situation and CMake provides several ways for users to "
"specify where to find such libraries."
msgstr "I pacchetti che non vengono trovati automaticamente si trovano in posizioni non prevedibili da CMake come ``/opt/mylib`` o ``$HOME/dev/prefix``.  Questa è una situazione normale e CMake fornisce agli utenti diversi modi per specificare dove trovare tali librerie."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:91
msgid ""
"The :variable:`CMAKE_PREFIX_PATH` variable may be :ref:`set when invoking"
" CMake <Setting Build Variables>`. It is treated as a list of paths to "
"search for :ref:`Config File Packages`.  A package installed in "
"``/opt/somepackage`` will typically install config files such as "
"``/opt/somepackage/lib/cmake/somePackage/SomePackageConfig.cmake``. In "
"that case, ``/opt/somepackage`` should be added to "
":variable:`CMAKE_PREFIX_PATH`."
msgstr "La variabile :variable:`CMAKE_PREFIX_PATH` può essere :ref:`impostata quando si invoca CMake <Setting Build Variables>`. Viene trattato come un elenco di percorsi in cui cercare :ref:`Config File Packages`.  Un pacchetto installato in ``/opt/somepackage`` tipicamente installerà file di configurazione come ``/opt/somepackage/lib/cmake/somePackage/SomePackageConfig.cmake``. In tal caso, ``/opt/somepackage`` dovrebbe essere aggiunto a :variable:`CMAKE_PREFIX_PATH`."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:101
msgid ""
"The environment variable ``CMAKE_PREFIX_PATH`` may also be populated with"
" prefixes to search for packages.  Like the ``PATH`` environment "
"variable, this is a list and needs to use the platform-specific "
"environment variable list item separator (``:`` on Unix and ``;`` on "
"Windows)."
msgstr "La variabile d'ambiente ``CMAKE_PREFIX_PATH`` può anche essere popolata con prefissi per cercare pacchetti.  Come la variabile di ambiente ``PATH``, questo è un elenco e deve utilizzare il separatore di voci dell'elenco di variabili di ambiente specifico della piattaforma (``:`` su Unix e ``;`` su Windows)."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:107
msgid ""
"The :variable:`CMAKE_PREFIX_PATH` variable provides convenience in cases "
"where multiple prefixes need to be specified, or when multiple different "
"package binaries are available in the same prefix.  Paths to packages may"
" also be specified by setting variables matching ``<PackageName>_DIR``, "
"such as ``SomePackage_DIR``.  Note that this is not a prefix but should "
"be a full path to a directory containing a config-style package file, "
"such as ``/opt/somepackage/lib/cmake/SomePackage/`` in the above example."
msgstr "La variabile :variable:`CMAKE_PREFIX_PATH` risulta comoda nei casi in cui è necessario specificare più prefissi o quando sono disponibili più file binari di pacchetti diversi nello stesso prefisso.  I percorsi dei pacchetti possono anche essere specificati impostando variabili corrispondenti a ``<PackageName>_DIR``, come ``SomePackage_DIR``.  Notare che questo non è un prefisso ma dovrebbe essere un percorso completo a una directory contenente un file di pacchetto in stile configurazione, come ``/opt/somepackage/lib/cmake/SomePackage/`` nell'esempio precedente."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:118
msgid "Imported Targets from Packages"
msgstr "Target Importati dai Pacchetti"

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:120
msgid ""
"A third-party package which provides config-file packages may also "
"provide :ref:`Imported targets`. These will be specified in files "
"containing configuration-specific file paths relevant to the package, "
"such as debug and release versions of libraries."
msgstr "Un pacchetto di terze parti che fornisce pacchetti di file di configurazione può anche fornire :ref:`Imported targets`. Questi verranno specificati in file contenenti percorsi di file specifici della configurazione rilevanti per il pacchetto, come versioni di debug e di rilascio delle librerie."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:126
msgid ""
"Often the third-party package documentation will point out the names of "
"imported targets available after a successful ``find_package`` for a "
"library.  Those imported target names can be used with the "
":command:`target_link_libraries` command."
msgstr "Spesso la documentazione dei pacchetti di terze parti indicherà i nomi dei target importati disponibili dopo un riuscito ``find_package`` per una libreria.  I nomi dei target importati possono essere utilizzati col comando :command:`target_link_libraries`."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:131
msgid ""
"A complete example which makes a simple use of a third party library "
"might look like:"
msgstr "Un esempio completo che fa un semplice utilizzo di una libreria di terze parti potrebbe essere simile a:"

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:143
msgid ""
"See :manual:`cmake-buildsystem(7)` for further information about "
"developing a CMake buildsystem."
msgstr "Consultare :manual:`cmake-buildsystem(7)` per ulteriori informazioni sullo sviluppo di un sistema di build CMake."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:147
msgid "Libraries not Providing Config-file Packages"
msgstr "Librerie Senza Pacchetti di File di Configurazione"

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:149
msgid ""
"Third-party libraries which do not provide config-file packages can still"
" be found with the :command:`find_package` command, if a "
"``FindSomePackage.cmake`` file is available."
msgstr "Le librerie di terze parti che non forniscono pacchetti di file di configurazione possono comunque essere trovate col comando :command:`find_package`, se è disponibile un file ``FindSomePackage.cmake``."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:153
msgid "These module-file packages are different to config-file packages in that:"
msgstr "Questi pacchetti di file-modulo sono diversi dai pacchetti di config-file in quanto:"

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:156
msgid ""
"They should not be provided by the third party, except perhaps in the "
"form of documentation"
msgstr "Non dovrebbero essere forniti da terzi, tranne forse sotto forma di documentazione"

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:158
msgid ""
"The availability of a ``Find<PackageName>.cmake`` file does not indicate "
"the availability of the binaries themselves."
msgstr "La disponibilità di un file ``Find<PackageName>.cmake`` non indica la disponibilità dei binari stessi."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:160
msgid ""
"CMake does not search the :variable:`CMAKE_PREFIX_PATH` for "
"``Find<PackageName>.cmake`` files.  Instead CMake searches for such files"
" in the :variable:`CMAKE_MODULE_PATH` variable. It is common for users to"
" set the :variable:`CMAKE_MODULE_PATH` when running CMake, and it is "
"common for CMake projects to append to :variable:`CMAKE_MODULE_PATH` to "
"allow use of local module-file packages."
msgstr "CMake non cerca in :variable:`CMAKE_PREFIX_PATH` i file ``Find<PackageName>.cmake``.  Invece CMake cerca tali file nella variabile :variable:`CMAKE_MODULE_PATH`. È normale che gli utenti impostino :variable:`CMAKE_MODULE_PATH` durante l'esecuzione di CMake ed è comune che i progetti CMake aggiungano a :variable:`CMAKE_MODULE_PATH` per consentire l'uso di pacchetti di file di moduli locali."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:168
msgid ""
"CMake ships ``Find<PackageName>.cmake`` files for some :manual:`third "
"party packages <cmake-modules(7)>` for convenience in cases where the "
"third party does not provide config-file packages directly.  These files "
"are a maintenance burden for CMake, so new Find modules are generally not"
" added to CMake anymore.  Third-parties should provide config file "
"packages instead of relying on a Find module to be provided by CMake."
msgstr "CMake fornisce i file ``Find<PackageName>.cmake`` per alcuni :manual:`pacchetti di terze parti <cmake-modules(7)>` per comodità nei casi in cui la terza parte non fornisce direttamente i pacchetti di file di configurazione.  Questi file rappresentano un onere di manutenzione per CMake, quindi i nuovi moduli \"Find\" generalmente non vengono più aggiunti a CMake.  Le terze parti dovrebbero fornire pacchetti di file di configurazione invece di fare affidamento su un modulo \"Find\" fornito da CMake."

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:177
msgid ""
"Module-file packages may also provide :ref:`Imported targets`. A complete"
" example which finds such a package might look like:"
msgstr "I pacchetti di file modulo possono anche fornire :ref:`Imported targets`. Un esempio completo che trova un pacchetto di questo tipo potrebbe essere simile a:"

#: ../../source/cmake/Help/guide/using-dependencies/index.rst:198
msgid ""
"The :variable:`<PackageName>_ROOT` variable is also searched as a prefix "
"for :command:`find_package` calls using module-file packages such as "
"``FindSomePackage``."
msgstr "La variabile :variable:`<PackageName>_ROOT` viene cercata anche come prefisso per le chiamate :command:`find_package` utilizzando pacchetti di file modulo come ``FindSomePackage``."

